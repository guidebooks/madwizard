Install Ray
├── Option 1: Local Install
│   ├── Option 1: Linux
│   │   └── pip install -U ray
│   ├── Option 2: Windows
│   │   └── pip install -U ray
│   └── Option 3: MacOS
│       ├── Option 1: Intel
│       │   └── pip install -U ray
│       └── Option 2: Apple Silicon
│           ├── Conda: Installation
│           │   ├── Option 1: Miniconda
│           │   │   ├── Option 1: Windows
│           │   │   │   └── echo windowsfake
│           │   │   ├── Option 2: MacOS
│           │   │   │   ├── Option 1: Intel
│           │   │   │   │   └── bash <(curl -L https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh)
│           │   │   │   └── Option 2: Apple Silicon
│           │   │   │       └── bash <(curl -L https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-arm64.sh)
│           │   │   └── Option 3: Linux
│           │   │       └── echo linuxfake
│           │   └── Option 2: Anaconda
│           │       ├── Option 1: Windows
│           │       │   └── echo windowsfake
│           │       ├── Option 2: MacOS
│           │       │   └── bash $<(curl -L https://repo.anaconda.com/archive/Anaconda3-2021.11-MacOSX-x86_64.sh)
│           │       └── Option 3: Linux
│           │           ├── Option 1: x86
│           │           │   └── bash $<(curl -L https://repo.anaconda.com/archive/Anaconda3-2021.11-Linux-x86_64.sh)
│           │           ├── Option 2: POWER8 and POWER9
│           │           │   └── bash $<(curl -L https://repo.anaconda.com/archive/Anaconda3-2021.11-Linux-ppc64le.sh)
│           │           ├── Option 3: AWS Graviton2/ARM64
│           │           │   └── bash $<(curl -L https://repo.anaconda.com/archive/Anaconda3-2021.11-Linux-aarch64.sh)
│           │           └── Option 4: IBM z/Linux and LinuxONE
│           │               └── bash $<(curl -L https://repo.anaconda.com/archive/Anaconda3-2021.11-Linux-s390x.sh)
│           └── conda activate
│               pip uninstall grpcio
│               conda install grpcio
│               pip install ray
└── Option 2: Kubernetes Install
    ├── Install kubectl
    │   ├── Option 1: Linux
    │   │   └── curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    │   ├── Option 2: Windows
    │   │   └── curl -LO "https://dl.k8s.io/release/v1.23.0/bin/windows/amd64/kubectl.exe"
    │   └── Option 3: MacOS
    │       ├── Option 1: Homebrew
    │       │   └── brew install kubectl
    │       └── Option 2: curl
    │           ├── Missing heading for choice
    │           │   ├── Option 1: Intel
    │           │   │   └── curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/darwin/amd64/kubectl.sha256"
    │           │   └── Option 2: Apple Silicon
    │           │       └── curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/darwin/arm64/kubectl.sha256"
    │           └── Installing a Specific Version
    │               ├── Option 1: Intel
    │               │   └── curl -LO "https://dl.k8s.io/release/v1.23.0/bin/darwin/amd64/kubectl" [OPTIONAL]
    │               └── Option 2: Apple Silicon
    │                   └── curl -LO "https://dl.k8s.io/release/v1.23.0/bin/darwin/arm64/kubectl" [OPTIONAL]
    ├── Install Helm
    │   ├── Option 1: MacOS
    │   │   ├── Option 1: Homebrew
    │   │   │   └── brew install helm
    │   │   └── Option 2: curl
    │   │       └── bash $<(curl -L https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3)
    │   ├── Option 2: Linux
    │   │   └── bash $<(curl -L https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3)
    │   └── Option 3: Windows
    │       └── bash $<(curl -L https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3)
    └── helm -n ray install example-cluster --create-namespace https://github.com/ray-project/ray/tree/master/deploy/charts/ray/
        kubectl wait --for=condition=available --all rayclusters

[
  {
    "graph": {
      "group": "Local Install####Kubernetes Install",
      "title": "Install Ray",
      "source": "placeholder",
      "provenance": ["test/inputs/23/install/index.md"],
      "choices": [
        {
          "member": 0,
          "graph": {
            "key": "64d865bd-c32a-4b68-b83d-128993679ec2",
            "sequence": [
              {
                "group": "Intel####Apple Silicon",
                "source": "placeholder",
                "provenance": ["test/inputs/23/install/index.md"],
                "choices": [
                  {
                    "member": 0,
                    "graph": {
                      "key": "5ce4b6de-cbe8-422b-9aec-430b596b1fa3",
                      "sequence": [
                        {
                          "body": "pip install -U ray",
                          "language": "shell",
                          "id": "c7521bd3-c13f-42b1-b078-2f4a788fbcc1-0"
                        }
                      ]
                    },
                    "title": "Intel",
                    "description": "\nIf you are running on x86/Intel hardware."
                  },
                  {
                    "member": 1,
                    "graph": {
                      "key": "a63b817d-652f-4555-a459-f3fee662919a",
                      "sequence": [
                        {
                          "key": "test/inputs/23/python/conda/install.md",
                          "title": "Conda: Installation",
                          "filepath": "test/inputs/23/python/conda/install.md",
                          "graph": {
                            "key": "fa03119c-66f0-4e54-bcef-3c224a0584d2",
                            "sequence": [
                              {
                                "group": "Install Miniconda####Install Anaconda",
                                "title": "Choose a Conda Installation Method",
                                "source": "placeholder",
                                "provenance": ["test/inputs/23/python/conda/install.md"],
                                "choices": [
                                  {
                                    "member": 0,
                                    "graph": {
                                      "key": "21f653d8-52b6-449d-8011-a2ab41a88d4d",
                                      "sequence": [
                                        {
                                          "group": "Windows####Linux####MacOS",
                                          "source": "placeholder",
                                          "provenance": ["test/inputs/23/python/conda/install.md"],
                                          "choices": [
                                            {
                                              "member": 1,
                                              "graph": {
                                                "key": "0f8032ee-660d-4b38-a702-91d6b4fab1eb",
                                                "sequence": [
                                                  {
                                                    "group": "Intel####ARM64",
                                                    "source": "placeholder",
                                                    "provenance": ["test/inputs/23/python/conda/install.md"],
                                                    "choices": [
                                                      {
                                                        "member": 0,
                                                        "graph": {
                                                          "key": "7b427bd1-f64b-4562-b7ad-4a6a124e693a",
                                                          "sequence": [
                                                            {
                                                              "body": "curl -LO https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh\nbash Miniconda3-latest-Linux-x86_64.sh -b -p ~/miniconda",
                                                              "language": "shell",
                                                              "id": "c7521bd3-c13f-42b1-b078-2f4a788fbcc1-1"
                                                            }
                                                          ]
                                                        },
                                                        "title": "Intel"
                                                      },
                                                      {
                                                        "member": 1,
                                                        "graph": {
                                                          "key": "d6e0de37-7210-4b63-a3a3-19bf70ff6d32",
                                                          "sequence": [
                                                            {
                                                              "body": "curl -LO https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-aarch64.sh\nbash Miniconda3-latest-Linux-aarch64.sh -b -p $HOME/miniconda",
                                                              "language": "shell",
                                                              "id": "c7521bd3-c13f-42b1-b078-2f4a788fbcc1-2"
                                                            }
                                                          ]
                                                        },
                                                        "title": "ARM64"
                                                      }
                                                    ]
                                                  }
                                                ]
                                              },
                                              "title": "Linux",
                                              "description": "\nIf you are running a Linux OS."
                                            },
                                            {
                                              "member": 2,
                                              "graph": {
                                                "key": "1fecdc90-01b3-47e9-8f17-a1cfab1b3b1e",
                                                "sequence": [
                                                  {
                                                    "group": "Intel####Apple Silicon",
                                                    "source": "placeholder",
                                                    "provenance": ["test/inputs/23/python/conda/install.md"],
                                                    "choices": [
                                                      {
                                                        "member": 0,
                                                        "graph": {
                                                          "key": "45bd2cc0-ca8b-46f0-88e3-78b4e0b8ef98",
                                                          "sequence": [
                                                            {
                                                              "body": "curl -LO https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh\nbash Miniconda3-latest-MacOSX-x86_64.sh -b -p $HOME/miniconda",
                                                              "language": "shell",
                                                              "id": "c7521bd3-c13f-42b1-b078-2f4a788fbcc1-3"
                                                            }
                                                          ]
                                                        },
                                                        "title": "Intel",
                                                        "description": "\nIf you are running on x86/Intel hardware."
                                                      },
                                                      {
                                                        "member": 1,
                                                        "graph": {
                                                          "key": "5e4cdb51-37d2-40b3-b3e5-5a874d622914",
                                                          "sequence": [
                                                            {
                                                              "body": "curl -LO https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-arm64.sh\nbash Miniconda3-latest-MacOSX-arm64.sh -b -p $HOME/miniconda",
                                                              "language": "shell",
                                                              "id": "c7521bd3-c13f-42b1-b078-2f4a788fbcc1-4"
                                                            }
                                                          ]
                                                        },
                                                        "title": "Apple Silicon",
                                                        "description": "\nIf you are running on Apple Silicon/ARM hardware."
                                                      }
                                                    ]
                                                  }
                                                ]
                                              },
                                              "title": "MacOS",
                                              "description": "\nIf you are running MacOS."
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "title": "Install Miniconda",
                                    "description": "\nMiniconda is a free minimal installer for conda. It is a small, bootstrap version of Anaconda that includes only conda, Python, the packages they depend on, and a small number of other useful packages, including pip, zlib and a few others. "
                                  },
                                  {
                                    "member": 1,
                                    "graph": {
                                      "key": "1e45697e-a1b1-480a-bb3f-1e7a61c62386",
                                      "sequence": [
                                        {
                                          "group": "MacOS####Linux",
                                          "source": "placeholder",
                                          "provenance": ["test/inputs/23/python/conda/install.md"],
                                          "choices": [
                                            {
                                              "member": 0,
                                              "graph": {
                                                "key": "477425ab-33d0-437c-a6b3-825d4df7691b",
                                                "sequence": [
                                                  {
                                                    "body": "curl -LO https://repo.anaconda.com/archive/Anaconda3-2021.11-MacOSX-x86_64.sh\nbash Anaconda3-2021.11-MacOSX-x86_64.sh -b -p $HOME/miniconda",
                                                    "language": "shell",
                                                    "id": "c7521bd3-c13f-42b1-b078-2f4a788fbcc1-5"
                                                  }
                                                ]
                                              },
                                              "title": "MacOS"
                                            },
                                            {
                                              "member": 1,
                                              "graph": {
                                                "key": "6b909331-b8c4-42c0-97af-c8d93186db24",
                                                "sequence": [
                                                  {
                                                    "group": "x86####POWER8 and POWER9####AWS Graviton2/ARM64####IBM z/Linux and LinuxONE",
                                                    "source": "placeholder",
                                                    "provenance": ["test/inputs/23/python/conda/install.md"],
                                                    "choices": [
                                                      {
                                                        "member": 0,
                                                        "graph": {
                                                          "key": "b495586f-be4c-448d-9f13-dd725805ca4f",
                                                          "sequence": [
                                                            {
                                                              "body": "curl -LO https://repo.anaconda.com/archive/Anaconda3-2021.11-Linux-x86_64.sh\nbash Anaconda3-2021.11-Linux-x86_64.sh -b -p $HOME/miniconda",
                                                              "language": "shell",
                                                              "id": "c7521bd3-c13f-42b1-b078-2f4a788fbcc1-6"
                                                            }
                                                          ]
                                                        },
                                                        "title": "x86"
                                                      },
                                                      {
                                                        "member": 1,
                                                        "graph": {
                                                          "key": "04957e64-e9e6-477d-9e62-d39965af4336",
                                                          "sequence": [
                                                            {
                                                              "body": "curl -LO https://repo.anaconda.com/archive/Anaconda3-2021.11-Linux-ppc64le.sh\nbash Anaconda3-2021.11-Linux-ppc64le.sh -b -p $HOME/miniconda",
                                                              "language": "shell",
                                                              "id": "c7521bd3-c13f-42b1-b078-2f4a788fbcc1-7"
                                                            }
                                                          ]
                                                        },
                                                        "title": "POWER8 and POWER9"
                                                      },
                                                      {
                                                        "member": 2,
                                                        "graph": {
                                                          "key": "8db78a55-2071-49fc-b7c9-7f14a7e9b8c5",
                                                          "sequence": [
                                                            {
                                                              "body": "curl -LO https://repo.anaconda.com/archive/Anaconda3-2021.11-Linux-aarch64.sh\nbash Anaconda3-2021.11-Linux-aarch64.sh -b -p $HOME/miniconda",
                                                              "language": "shell",
                                                              "id": "c7521bd3-c13f-42b1-b078-2f4a788fbcc1-8"
                                                            }
                                                          ]
                                                        },
                                                        "title": "AWS Graviton2/ARM64"
                                                      },
                                                      {
                                                        "member": 3,
                                                        "graph": {
                                                          "key": "e9e7bac7-1afe-4417-8cb8-8322b68e8291",
                                                          "sequence": [
                                                            {
                                                              "body": "curl -LO https://repo.anaconda.com/archive/Anaconda3-2021.11-Linux-s390x.sh\nbash Anaconda3-2021.11-Linux-s390x.sh -b -p $HOME/miniconda",
                                                              "language": "shell",
                                                              "id": "c7521bd3-c13f-42b1-b078-2f4a788fbcc1-9"
                                                            }
                                                          ]
                                                        },
                                                        "title": "IBM z/Linux and LinuxONE"
                                                      }
                                                    ]
                                                  }
                                                ]
                                              },
                                              "title": "Linux"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "title": "Install Anaconda",
                                    "description": "\nThis will install Miniconda plus hundreds of packages."
                                  }
                                ]
                              },
                              {
                                "body": "export PATH=~/miniconda/bin:$PATH",
                                "language": "shell",
                                "id": "c7521bd3-c13f-42b1-b078-2f4a788fbcc1-10"
                              }
                            ]
                          },
                          "source": "placeholder"
                        },
                        {
                          "body": "conda activate\npip uninstall grpcio\nconda install grpcio\npip install ray",
                          "language": "shell",
                          "id": "c7521bd3-c13f-42b1-b078-2f4a788fbcc1-11"
                        }
                      ]
                    },
                    "title": "Apple Silicon",
                    "description": "\nIf you are running on Apple Silicon/ARM hardware."
                  }
                ]
              }
            ]
          },
          "title": "Local Install",
          "description": "\nThis will install Ray on your laptop."
        },
        {
          "member": 1,
          "graph": {
            "key": "1e9d78cc-0d5c-4b0d-b162-f8116a5f0808",
            "sequence": [
              {
                "key": "test/inputs/23/kubernetes/kubectl.md",
                "title": "Install kubectl",
                "filepath": "test/inputs/23/kubernetes/kubectl.md",
                "graph": {
                  "key": "92518ea5-3ba2-49cc-b912-035913b85e85",
                  "sequence": [
                    {
                      "group": "Linux####Windows####MacOS",
                      "title": "Install kubectl",
                      "source": "placeholder",
                      "provenance": ["test/inputs/23/kubernetes/kubectl.md"],
                      "choices": [
                        {
                          "member": 0,
                          "graph": {
                            "key": "31836947-ec5a-4c14-b5f7-5aca74c411d4",
                            "sequence": [
                              {
                                "body": "curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"",
                                "language": "bash",
                                "id": "c7521bd3-c13f-42b1-b078-2f4a788fbcc1-12"
                              }
                            ]
                          },
                          "title": "Linux",
                          "description": "Download the latest release with the command:\n"
                        },
                        {
                          "member": 1,
                          "graph": {
                            "key": "624c14b4-4c13-493b-98a4-acab04036024",
                            "sequence": [
                              {
                                "body": "curl -LO \"https://dl.k8s.io/release/v1.23.0/bin/windows/amd64/kubectl.exe\"",
                                "language": "bash",
                                "id": "c7521bd3-c13f-42b1-b078-2f4a788fbcc1-13"
                              }
                            ]
                          },
                          "title": "Windows",
                          "description": "Download the latest release:\n"
                        },
                        {
                          "member": 2,
                          "graph": {
                            "key": "b3f0a860-9444-4383-af57-83fcee604c9c",
                            "sequence": [
                              {
                                "group": "Homebrew####curl",
                                "source": "placeholder",
                                "provenance": ["test/inputs/23/kubernetes/kubectl.md"],
                                "choices": [
                                  {
                                    "member": 0,
                                    "graph": {
                                      "key": "7a246495-4008-4336-a470-adc5d886b8e7",
                                      "sequence": [
                                        {
                                          "body": "brew install kubectl",
                                          "language": "bash",
                                          "id": "c7521bd3-c13f-42b1-b078-2f4a788fbcc1-14"
                                        }
                                      ]
                                    },
                                    "title": "Homebrew",
                                    "description": "\nIf you are on macOS and using Homebrew package manager, you can install kubectl with Homebrew."
                                  },
                                  {
                                    "member": 1,
                                    "graph": {
                                      "key": "adf152ae-24b9-49a9-8610-fe6c85c8494d",
                                      "sequence": [
                                        {
                                          "group": "Intel####Apple Silicon",
                                          "source": "placeholder",
                                          "provenance": ["test/inputs/23/kubernetes/kubectl.md"],
                                          "choices": [
                                            {
                                              "member": 0,
                                              "graph": {
                                                "key": "36ac4f1d-e1ca-4e54-8c73-792d3c90f622",
                                                "sequence": [
                                                  {
                                                    "body": "curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/darwin/amd64/kubectl.sha256\"",
                                                    "language": "bash",
                                                    "id": "c7521bd3-c13f-42b1-b078-2f4a788fbcc1-15"
                                                  }
                                                ]
                                              },
                                              "title": "Intel"
                                            },
                                            {
                                              "member": 1,
                                              "graph": {
                                                "key": "fa15f7cc-26c6-4f28-9c69-7d263a19624b",
                                                "sequence": [
                                                  {
                                                    "body": "curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/darwin/arm64/kubectl.sha256\"",
                                                    "language": "bash",
                                                    "id": "c7521bd3-c13f-42b1-b078-2f4a788fbcc1-16"
                                                  }
                                                ]
                                              },
                                              "title": "Apple Silicon"
                                            }
                                          ]
                                        },
                                        {
                                          "body": "curl -LO \"https://dl.k8s.io/release/v1.23.0/bin/darwin/amd64/kubectl\"\nAnd for macOS on Apple Silicon, type:\n    \ncurl -LO \"https://dl.k8s.io/release/v1.23.0/bin/darwin/arm64/kubectl\"",
                                          "language": "bash",
                                          "id": "c7521bd3-c13f-42b1-b078-2f4a788fbcc1-17"
                                        }
                                      ]
                                    },
                                    "title": "curl",
                                    "description": "To download the latest release:\n"
                                  }
                                ]
                              }
                            ]
                          },
                          "title": "MacOS",
                          "description": "The following methods exist for installing kubectl on macOS:\n"
                        }
                      ]
                    }
                  ]
                },
                "source": "placeholder"
              },
              {
                "key": "test/inputs/23/kubernetes/helm3.md",
                "title": "Install Helm v3",
                "filepath": "test/inputs/23/kubernetes/helm3.md",
                "graph": {
                  "key": "82b7f8cd-1d5e-4684-927c-0fca0dcd44b3",
                  "sequence": [
                    {
                      "group": "MacOS####Linux####Windows",
                      "title": "Install Helm v3",
                      "source": "placeholder",
                      "provenance": ["test/inputs/23/kubernetes/helm3.md"],
                      "choices": [
                        {
                          "member": 0,
                          "graph": {
                            "key": "c6d1dc0e-5c6a-4804-9df1-0582017217a1",
                            "sequence": [
                              {
                                "group": "Homebrew####curl",
                                "source": "placeholder",
                                "provenance": ["test/inputs/23/kubernetes/helm3.md"],
                                "choices": [
                                  {
                                    "member": 0,
                                    "graph": {
                                      "key": "10852f3a-dc0f-426a-8e93-57f1b1af0411",
                                      "sequence": [
                                        {
                                          "body": "brew install helm",
                                          "language": "shell",
                                          "id": "c7521bd3-c13f-42b1-b078-2f4a788fbcc1-18"
                                        }
                                      ]
                                    },
                                    "title": "Homebrew"
                                  },
                                  {
                                    "member": 1,
                                    "graph": {
                                      "key": "1d403fc7-cce0-4faa-a7a5-a6250d2cd301",
                                      "sequence": [
                                        {
                                          "body": "bash $<(curl -L https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3)",
                                          "language": "shell",
                                          "id": "c7521bd3-c13f-42b1-b078-2f4a788fbcc1-19"
                                        }
                                      ]
                                    },
                                    "title": "curl"
                                  }
                                ]
                              }
                            ]
                          },
                          "title": "MacOS"
                        },
                        {
                          "member": 1,
                          "graph": {
                            "key": "c8c88f62-12fd-45a3-858d-063bfd7d7491",
                            "sequence": [
                              {
                                "body": "bash $<(curl -L https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3)",
                                "language": "shell",
                                "id": "c7521bd3-c13f-42b1-b078-2f4a788fbcc1-20"
                              }
                            ]
                          },
                          "title": "Linux"
                        },
                        {
                          "member": 2,
                          "graph": {
                            "key": "051fa801-535b-4061-a727-0d05a56b820e",
                            "sequence": [
                              {
                                "body": "bash $<(curl -L https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3)",
                                "language": "shell",
                                "id": "c7521bd3-c13f-42b1-b078-2f4a788fbcc1-21"
                              }
                            ]
                          },
                          "title": "Windows"
                        }
                      ]
                    }
                  ]
                },
                "source": "placeholder"
              },
              {
                "key": "test/inputs/23/kubernetes/context.md",
                "title": "Choose a Kubernetes context",
                "filepath": "test/inputs/23/kubernetes/context.md",
                "graph": {
                  "key": "e541cc0c-bca2-4470-ad5e-9679d9a4fa33",
                  "sequence": [
                    {
                      "key": "test/inputs/23/kubernetes/kubectl.md",
                      "title": "Install kubectl",
                      "filepath": "test/inputs/23/kubernetes/kubectl.md",
                      "graph": {
                        "key": "ae178c9c-b7e6-46c8-961b-6fc94d863d25",
                        "sequence": [
                          {
                            "group": "Linux####Windows####MacOS",
                            "title": "Install kubectl",
                            "source": "placeholder",
                            "provenance": ["test/inputs/23/kubernetes/kubectl.md"],
                            "choices": [
                              {
                                "member": 0,
                                "graph": {
                                  "key": "5ee7f4cf-948a-46ea-add8-b3f249ee06e8",
                                  "sequence": [
                                    {
                                      "body": "curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"",
                                      "language": "bash",
                                      "id": "c7521bd3-c13f-42b1-b078-2f4a788fbcc1-22"
                                    }
                                  ]
                                },
                                "title": "Linux",
                                "description": "Download the latest release with the command:\n"
                              },
                              {
                                "member": 1,
                                "graph": {
                                  "key": "fb2ceb60-ed08-4352-8664-929bd80231a2",
                                  "sequence": [
                                    {
                                      "body": "curl -LO \"https://dl.k8s.io/release/v1.23.0/bin/windows/amd64/kubectl.exe\"",
                                      "language": "bash",
                                      "id": "c7521bd3-c13f-42b1-b078-2f4a788fbcc1-23"
                                    }
                                  ]
                                },
                                "title": "Windows",
                                "description": "Download the latest release:\n"
                              },
                              {
                                "member": 2,
                                "graph": {
                                  "key": "81903a52-796c-4e10-9900-9d16db4f54c8",
                                  "sequence": [
                                    {
                                      "group": "Homebrew####curl",
                                      "source": "placeholder",
                                      "provenance": ["test/inputs/23/kubernetes/kubectl.md"],
                                      "choices": [
                                        {
                                          "member": 0,
                                          "graph": {
                                            "key": "7b6a0ecd-5634-4fb7-95de-d278c73150a4",
                                            "sequence": [
                                              {
                                                "body": "brew install kubectl",
                                                "language": "bash",
                                                "id": "c7521bd3-c13f-42b1-b078-2f4a788fbcc1-24"
                                              }
                                            ]
                                          },
                                          "title": "Homebrew",
                                          "description": "\nIf you are on macOS and using Homebrew package manager, you can install kubectl with Homebrew."
                                        },
                                        {
                                          "member": 1,
                                          "graph": {
                                            "key": "572f02b1-aa48-44e9-bfcf-01ec3de59c86",
                                            "sequence": [
                                              {
                                                "group": "Intel####Apple Silicon",
                                                "source": "placeholder",
                                                "provenance": ["test/inputs/23/kubernetes/kubectl.md"],
                                                "choices": [
                                                  {
                                                    "member": 0,
                                                    "graph": {
                                                      "key": "a4acb5ad-0096-4ea3-8d06-fd26cb9f9442",
                                                      "sequence": [
                                                        {
                                                          "body": "curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/darwin/amd64/kubectl.sha256\"",
                                                          "language": "bash",
                                                          "id": "c7521bd3-c13f-42b1-b078-2f4a788fbcc1-25"
                                                        }
                                                      ]
                                                    },
                                                    "title": "Intel"
                                                  },
                                                  {
                                                    "member": 1,
                                                    "graph": {
                                                      "key": "385d8dfc-e6f2-4192-bf2a-85c3bfcde9ba",
                                                      "sequence": [
                                                        {
                                                          "body": "curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/darwin/arm64/kubectl.sha256\"",
                                                          "language": "bash",
                                                          "id": "c7521bd3-c13f-42b1-b078-2f4a788fbcc1-26"
                                                        }
                                                      ]
                                                    },
                                                    "title": "Apple Silicon"
                                                  }
                                                ]
                                              },
                                              {
                                                "body": "curl -LO \"https://dl.k8s.io/release/v1.23.0/bin/darwin/amd64/kubectl\"\nAnd for macOS on Apple Silicon, type:\n    \ncurl -LO \"https://dl.k8s.io/release/v1.23.0/bin/darwin/arm64/kubectl\"",
                                                "language": "bash",
                                                "id": "c7521bd3-c13f-42b1-b078-2f4a788fbcc1-27"
                                              }
                                            ]
                                          },
                                          "title": "curl",
                                          "description": "To download the latest release:\n"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "title": "MacOS",
                                "description": "The following methods exist for installing kubectl on macOS:\n"
                              }
                            ]
                          }
                        ]
                      },
                      "source": "placeholder"
                    },
                    {
                      "group": "fakeit",
                      "title": "Choose a Kubernetes context",
                      "source": "placeholder",
                      "provenance": ["test/inputs/23/kubernetes/context.md"],
                      "choices": [
                        {
                          "member": 0,
                          "graph": {
                            "key": "ab7f8cfe-ea12-4b7c-a9b5-c720a6a24225",
                            "sequence": [
                              {
                                "body": "kubectl config set-context \"\"",
                                "language": "shell",
                                "id": "c7521bd3-c13f-42b1-b078-2f4a788fbcc1-28"
                              }
                            ]
                          },
                          "title": "fakeit"
                        }
                      ]
                    }
                  ]
                },
                "source": "placeholder"
              },
              {
                "body": "helm -n ray install example-cluster --create-namespace https://github.com/ray-project/ray/tree/master/deploy/charts/ray/\nkubectl wait --for=condition=available --all rayclusters",
                "language": "shell",
                "id": "c7521bd3-c13f-42b1-b078-2f4a788fbcc1-29"
              }
            ]
          },
          "title": "Kubernetes Install",
          "description": "This will install Ray on a Kubernetes context of your choosing.\n"
        }
      ]
    },
    "step": {
      "name": "Install Ray",
      "description": "This step requires you to choose how to proceed",
      "content": [
        {
          "title": "Local Install",
          "group": "Local Install####Kubernetes Install",
          "member": 0,
          "isFirstChoice": true,
          "description": "\nThis will install Ray on your laptop."
        },
        {
          "title": "Kubernetes Install",
          "group": "Local Install####Kubernetes Install",
          "member": 1,
          "isFirstChoice": true,
          "description": "This will install Ray on a Kubernetes context of your choosing.\n"
        }
      ]
    }
  },
  {
    "graph": {
      "group": "Example: Using Ray Tasks to Parallelize a Function####Example: Using Ray Actors to Parallelize a Class####Example: Creating and Transforming Datasets",
      "title": "Run a Ray Job",
      "source": "placeholder",
      "provenance": ["test/inputs/23/in.md"],
      "choices": [
        {
          "member": 0,
          "graph": {
            "key": "0c3d2694-3b5d-461a-8b4c-4b208edaa2bf",
            "sequence": [
              {
                "body": "import ray\nray.init()\n\n@ray.remote\ndef f(x):\n    return x * x\n\nfutures = [f.remote(i) for i in range(4)]\nprint(ray.get(futures)) # [0, 1, 4, 9]",
                "language": "python",
                "id": "c7521bd3-c13f-42b1-b078-2f4a788fbcc1-30"
              }
            ]
          },
          "title": "Example: Using Ray Tasks to Parallelize a Function",
          "description": "First, you import Ray and and initialize it with `ray.init()`. Then you decorate your function with `@ray.remote` to declare that you want to run this function remotely. Lastly, you call that function with `.remote()` instead of calling it normally. This remote call yields a future, a so-called Ray object reference, that you can then fetch with `ray.get`.\n"
        },
        {
          "member": 1,
          "graph": {
            "key": "89fdcd6f-484d-486f-9c6c-7a656d05f316",
            "sequence": [
              {
                "body": "import ray\nray.init() # Only call this once.\n\n@ray.remote\nclass Counter(object):\n    def __init__(self):\n        self.n = 0\n\n    def increment(self):\n        self.n += 1\n\n    def read(self):\n        return self.n\n\ncounters = [Counter.remote() for i in range(4)]\n[c.increment.remote() for c in counters]\nfutures = [c.read.remote() for c in counters]\nprint(ray.get(futures)) # [1, 1, 1, 1]",
                "language": "python",
                "id": "c7521bd3-c13f-42b1-b078-2f4a788fbcc1-31"
              }
            ]
          },
          "title": "Example: Using Ray Actors to Parallelize a Class",
          "description": "Ray provides actors to allow you to parallelize an instance of a class in Python or Java. When you instantiate a class that is a Ray actor, Ray will start a remote instance of that class in the cluster. This actor can then execute remote method calls and maintain its own internal state.\n"
        },
        {
          "member": 2,
          "graph": {
            "key": "d049e069-32db-47fc-8dab-62b58119eef9",
            "sequence": [
              {
                "key": "test/inputs/23/data.md",
                "title": "Install Ray Data",
                "filepath": "test/inputs/23/data.md",
                "graph": {
                  "key": "b8a44ecf-4374-4df3-b8e6-29fe8670abbb",
                  "sequence": [
                    {
                      "body": "pip install \"ray[data]\" dask",
                      "language": "shell",
                      "id": "c7521bd3-c13f-42b1-b078-2f4a788fbcc1-32"
                    }
                  ]
                },
                "source": "placeholder"
              },
              {
                "group": "New Dataset from Range####New Dataset from File",
                "title": "Creating and Transforming Datasets",
                "source": "placeholder",
                "provenance": ["test/inputs/23/in.md"],
                "choices": [
                  {
                    "member": 0,
                    "graph": {
                      "key": "3ec18e15-4d00-48d5-9cd7-594e30cd5b71",
                      "sequence": [
                        {
                          "body": "import ray\n\n# Create a Dataset of Python objects.\nds = ray.data.range(10000)\n# -> Dataset(num_blocks=200, num_rows=10000, schema=<class 'int'>)\n\nds.take(5)\n# -> [0, 1, 2, 3, 4]\n\nds.count()\n# -> 10000\n\n# Create a Dataset of Arrow records.\nds = ray.data.from_items([{\"col1\": i, \"col2\": str(i)} for i in range(10000)])\n# -> Dataset(num_blocks=200, num_rows=10000, schema={col1: int64, col2: string})\n\nds.show(5)\n# -> {'col1': 0, 'col2': '0'}\n# -> {'col1': 1, 'col2': '1'}\n# -> {'col1': 2, 'col2': '2'}\n# -> {'col1': 3, 'col2': '3'}\n# -> {'col1': 4, 'col2': '4'}\n\nds.schema()\n# -> col1: int64\n# -> col2: string",
                          "language": "python",
                          "id": "c7521bd3-c13f-42b1-b078-2f4a788fbcc1-33"
                        }
                      ]
                    },
                    "title": "New Dataset from Range",
                    "description": "\nGet started by creating Datasets from synthetic data using\n"
                  },
                  {
                    "member": 1,
                    "graph": {
                      "key": "5d451095-471f-43ed-a9e5-92ac5c60eaec",
                      "sequence": [
                        {
                          "body": "import ray\nimport pandas as pd\nimport dask.dataframe as dd\n\n# Create a Dataset from a list of Pandas DataFrame objects.\npdf = pd.DataFrame({\"one\": [1, 2, 3], \"two\": [\"a\", \"b\", \"c\"]})\nds = ray.data.from_pandas([pdf])\n\n# Create a Dataset from a Dask-on-Ray DataFrame.\ndask_df = dd.from_pandas(pdf, npartitions=10)\nds = ray.data.from_dask(dask_df)\n\n# Transform the dataset using .map()\nds = ray.data.range(10000)\nds = ds.map(lambda x: x * 2)\n# -> Map Progress: 100%|████████████████████| 200/200 [00:00<00:00, 1123.54it/s]\n# -> Dataset(num_blocks=200, num_rows=10000, schema=<class 'int'>)\nds.take(5)\n# -> [0, 2, 4, 6, 8]\n\n# Transform the dataset using .filter()\nds.filter(lambda x: x > 5).take(5)\n# -> Map Progress: 100%|████████████████████| 200/200 [00:00<00:00, 1859.63it/s]\n# -> [6, 8, 10, 12, 14]\n\n# Transform the dataset using .flat_map()\nds.flat_map(lambda x: [x, -x]).take(5)\n# -> Map Progress: 100%|████████████████████| 200/200 [00:00<00:00, 1568.10it/s]\n# -> [0, 0, 2, -2, 4]",
                          "language": "python",
                          "id": "c7521bd3-c13f-42b1-b078-2f4a788fbcc1-34"
                        }
                      ]
                    },
                    "title": "New Dataset from File",
                    "description": "\nDatasets can be created from files on local disk or remote datasources\nsuch as S3. Any filesystem "
                  }
                ]
              }
            ]
          },
          "title": "Example: Creating and Transforming Datasets",
          "description": "Ray Datasets are the standard way to load and exchange data in Ray libraries and applications. They provide basic distributed data transformations such as `map`, `filter`, and `repartition`, and are compatible with a variety of file formats, data sources, and distributed frameworks.\n"
        }
      ]
    },
    "step": {
      "name": "Run a Ray Job",
      "description": "This step requires you to choose how to proceed",
      "content": [
        {
          "title": "Example: Using Ray Tasks to Parallelize a Function",
          "group": "Example: Using Ray Tasks to Parallelize a Function####Example: Using Ray Actors to Parallelize a Class####Example: Creating and Transforming Datasets",
          "member": 0,
          "isFirstChoice": false,
          "description": "First, you import Ray and and initialize it with `ray.init()`. Then you decorate your function with `@ray.remote` to declare that you want to run this function remotely. Lastly, you call that function with `.remote()` instead of calling it normally. This remote call yields a future, a so-called Ray object reference, that you can then fetch with `ray.get`.\n"
        },
        {
          "title": "Example: Using Ray Actors to Parallelize a Class",
          "group": "Example: Using Ray Tasks to Parallelize a Function####Example: Using Ray Actors to Parallelize a Class####Example: Creating and Transforming Datasets",
          "member": 1,
          "isFirstChoice": false,
          "description": "Ray provides actors to allow you to parallelize an instance of a class in Python or Java. When you instantiate a class that is a Ray actor, Ray will start a remote instance of that class in the cluster. This actor can then execute remote method calls and maintain its own internal state.\n"
        },
        {
          "title": "Example: Creating and Transforming Datasets",
          "group": "Example: Using Ray Tasks to Parallelize a Function####Example: Using Ray Actors to Parallelize a Class####Example: Creating and Transforming Datasets",
          "member": 2,
          "isFirstChoice": false,
          "description": "Ray Datasets are the standard way to load and exchange data in Ray libraries and applications. They provide basic distributed data transformations such as `map`, `filter`, and `repartition`, and are compatible with a variety of file formats, data sources, and distributed frameworks.\n"
        }
      ]
    }
  }
]

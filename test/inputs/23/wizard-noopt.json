[
  {
    "graph": {
      "group": "Local Install####Kubernetes Install",
      "title": "Install Ray",
      "source": "placeholder",
      "provenance": ["test/inputs/23/install/index.md"],
      "choices": [
        {
          "member": 0,
          "graph": {
            "key": "f053a79a-5134-4d22-b435-b6a42ce24e7b",
            "sequence": [
              {
                "group": "Intel####Apple Silicon",
                "source": "placeholder",
                "provenance": ["test/inputs/23/install/index.md"],
                "choices": [
                  {
                    "member": 0,
                    "graph": {
                      "key": "56597ad2-7564-4643-9801-8ac1ecbae18d",
                      "sequence": [
                        {
                          "body": "pip install -U ray",
                          "language": "shell",
                          "id": "6645a239-3679-4a2b-92ad-433643266135-0"
                        }
                      ]
                    },
                    "title": "Intel",
                    "description": "\nIf you are running on x86/Intel hardware."
                  },
                  {
                    "member": 1,
                    "graph": {
                      "key": "60dc6dbf-cd98-4ccd-87a9-29a56f56668b",
                      "sequence": [
                        {
                          "key": "test/inputs/23/python/conda/install.md",
                          "title": "Conda: Installation",
                          "filepath": "test/inputs/23/python/conda/install.md",
                          "graph": {
                            "key": "ab21bbbb-e915-4617-809b-f8b3c9e898cd",
                            "sequence": [
                              {
                                "group": "Install Miniconda####Install Anaconda",
                                "title": "Choose a Conda Installation Method",
                                "source": "placeholder",
                                "provenance": ["test/inputs/23/python/conda/install.md"],
                                "choices": [
                                  {
                                    "member": 0,
                                    "graph": {
                                      "key": "19e35d46-7c4a-464d-9966-a02007f1521d",
                                      "sequence": [
                                        {
                                          "group": "Windows####Linux####MacOS",
                                          "source": "placeholder",
                                          "provenance": ["test/inputs/23/python/conda/install.md"],
                                          "choices": [
                                            {
                                              "member": 1,
                                              "graph": {
                                                "key": "9227bab1-709e-4142-a8d3-981711213c2c",
                                                "sequence": [
                                                  {
                                                    "group": "Intel####ARM64",
                                                    "source": "placeholder",
                                                    "provenance": ["test/inputs/23/python/conda/install.md"],
                                                    "choices": [
                                                      {
                                                        "member": 0,
                                                        "graph": {
                                                          "key": "ffd8ffb3-7658-4de9-bc80-e9a070c3e0ae",
                                                          "sequence": [
                                                            {
                                                              "body": "curl -LO https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh\nbash Miniconda3-latest-Linux-x86_64.sh -b -p ~/miniconda",
                                                              "language": "shell",
                                                              "id": "6645a239-3679-4a2b-92ad-433643266135-1"
                                                            }
                                                          ]
                                                        },
                                                        "title": "Intel"
                                                      },
                                                      {
                                                        "member": 1,
                                                        "graph": {
                                                          "key": "6ad9a182-a60d-4a5d-9937-7a6a757dbd9c",
                                                          "sequence": [
                                                            {
                                                              "body": "curl -LO https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-aarch64.sh\nbash Miniconda3-latest-Linux-aarch64.sh -b -p $HOME/miniconda",
                                                              "language": "shell",
                                                              "id": "6645a239-3679-4a2b-92ad-433643266135-2"
                                                            }
                                                          ]
                                                        },
                                                        "title": "ARM64"
                                                      }
                                                    ]
                                                  }
                                                ]
                                              },
                                              "title": "Linux",
                                              "description": "\nIf you are running a Linux OS."
                                            },
                                            {
                                              "member": 2,
                                              "graph": {
                                                "key": "6984968f-03dc-4567-824d-1e62da5795c5",
                                                "sequence": [
                                                  {
                                                    "group": "Intel####Apple Silicon",
                                                    "source": "placeholder",
                                                    "provenance": ["test/inputs/23/python/conda/install.md"],
                                                    "choices": [
                                                      {
                                                        "member": 0,
                                                        "graph": {
                                                          "key": "8e274af0-30e7-454b-838a-6038b8996935",
                                                          "sequence": [
                                                            {
                                                              "body": "curl -LO https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh\nbash Miniconda3-latest-MacOSX-x86_64.sh -b -p $HOME/miniconda",
                                                              "language": "shell",
                                                              "id": "6645a239-3679-4a2b-92ad-433643266135-3"
                                                            }
                                                          ]
                                                        },
                                                        "title": "Intel",
                                                        "description": "\nIf you are running on x86/Intel hardware."
                                                      },
                                                      {
                                                        "member": 1,
                                                        "graph": {
                                                          "key": "b05e9319-7721-4aa7-ad47-87ee41a5e291",
                                                          "sequence": [
                                                            {
                                                              "body": "curl -LO https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-arm64.sh\nbash Miniconda3-latest-MacOSX-arm64.sh -b -p $HOME/miniconda",
                                                              "language": "shell",
                                                              "id": "6645a239-3679-4a2b-92ad-433643266135-4"
                                                            }
                                                          ]
                                                        },
                                                        "title": "Apple Silicon",
                                                        "description": "\nIf you are running on Apple Silicon/ARM hardware."
                                                      }
                                                    ]
                                                  }
                                                ]
                                              },
                                              "title": "MacOS",
                                              "description": "\nIf you are running MacOS."
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "title": "Install Miniconda",
                                    "description": "\nMiniconda is a free minimal installer for conda. It is a small, bootstrap version of Anaconda that includes only conda, Python, the packages they depend on, and a small number of other useful packages, including pip, zlib and a few others. "
                                  },
                                  {
                                    "member": 1,
                                    "graph": {
                                      "key": "2b5b2f7c-0fc9-4807-a31a-37593e3246e9",
                                      "sequence": [
                                        {
                                          "group": "MacOS####Linux",
                                          "source": "placeholder",
                                          "provenance": ["test/inputs/23/python/conda/install.md"],
                                          "choices": [
                                            {
                                              "member": 0,
                                              "graph": {
                                                "key": "d683c002-ab5a-48fb-b37c-0144d265cb8f",
                                                "sequence": [
                                                  {
                                                    "body": "curl -LO https://repo.anaconda.com/archive/Anaconda3-2021.11-MacOSX-x86_64.sh\nbash Anaconda3-2021.11-MacOSX-x86_64.sh -b -p $HOME/miniconda",
                                                    "language": "shell",
                                                    "id": "6645a239-3679-4a2b-92ad-433643266135-5"
                                                  }
                                                ]
                                              },
                                              "title": "MacOS"
                                            },
                                            {
                                              "member": 1,
                                              "graph": {
                                                "key": "3253ddcd-7005-4415-9321-46212daee6dc",
                                                "sequence": [
                                                  {
                                                    "group": "x86####POWER8 and POWER9####AWS Graviton2/ARM64####IBM z/Linux and LinuxONE",
                                                    "source": "placeholder",
                                                    "provenance": ["test/inputs/23/python/conda/install.md"],
                                                    "choices": [
                                                      {
                                                        "member": 0,
                                                        "graph": {
                                                          "key": "6e286c48-213f-4182-875a-305e164d4f28",
                                                          "sequence": [
                                                            {
                                                              "body": "curl -LO https://repo.anaconda.com/archive/Anaconda3-2021.11-Linux-x86_64.sh\nbash Anaconda3-2021.11-Linux-x86_64.sh -b -p $HOME/miniconda",
                                                              "language": "shell",
                                                              "id": "6645a239-3679-4a2b-92ad-433643266135-6"
                                                            }
                                                          ]
                                                        },
                                                        "title": "x86"
                                                      },
                                                      {
                                                        "member": 1,
                                                        "graph": {
                                                          "key": "60229d95-10f2-4003-8cc2-82613a3776a9",
                                                          "sequence": [
                                                            {
                                                              "body": "curl -LO https://repo.anaconda.com/archive/Anaconda3-2021.11-Linux-ppc64le.sh\nbash Anaconda3-2021.11-Linux-ppc64le.sh -b -p $HOME/miniconda",
                                                              "language": "shell",
                                                              "id": "6645a239-3679-4a2b-92ad-433643266135-7"
                                                            }
                                                          ]
                                                        },
                                                        "title": "POWER8 and POWER9"
                                                      },
                                                      {
                                                        "member": 2,
                                                        "graph": {
                                                          "key": "4eb9e2e6-84b8-46bf-9b2b-ffada11864e8",
                                                          "sequence": [
                                                            {
                                                              "body": "curl -LO https://repo.anaconda.com/archive/Anaconda3-2021.11-Linux-aarch64.sh\nbash Anaconda3-2021.11-Linux-aarch64.sh -b -p $HOME/miniconda",
                                                              "language": "shell",
                                                              "id": "6645a239-3679-4a2b-92ad-433643266135-8"
                                                            }
                                                          ]
                                                        },
                                                        "title": "AWS Graviton2/ARM64"
                                                      },
                                                      {
                                                        "member": 3,
                                                        "graph": {
                                                          "key": "e9ca8025-c85d-473c-b466-fb0498027812",
                                                          "sequence": [
                                                            {
                                                              "body": "curl -LO https://repo.anaconda.com/archive/Anaconda3-2021.11-Linux-s390x.sh\nbash Anaconda3-2021.11-Linux-s390x.sh -b -p $HOME/miniconda",
                                                              "language": "shell",
                                                              "id": "6645a239-3679-4a2b-92ad-433643266135-9"
                                                            }
                                                          ]
                                                        },
                                                        "title": "IBM z/Linux and LinuxONE"
                                                      }
                                                    ]
                                                  }
                                                ]
                                              },
                                              "title": "Linux"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "title": "Install Anaconda",
                                    "description": "\nThis will install Miniconda plus hundreds of packages."
                                  }
                                ]
                              },
                              {
                                "body": "export PATH=~/miniconda/bin:$PATH",
                                "language": "shell",
                                "id": "6645a239-3679-4a2b-92ad-433643266135-10"
                              }
                            ]
                          },
                          "source": "placeholder"
                        },
                        {
                          "body": "conda activate\npip uninstall grpcio\nconda install grpcio\npip install ray",
                          "language": "shell",
                          "id": "6645a239-3679-4a2b-92ad-433643266135-11"
                        }
                      ]
                    },
                    "title": "Apple Silicon",
                    "description": "\nIf you are running on Apple Silicon/ARM hardware."
                  }
                ]
              }
            ]
          },
          "title": "Local Install",
          "description": "\nThis will install Ray on your laptop."
        },
        {
          "member": 1,
          "graph": {
            "key": "fd3a114e-a5aa-4fae-9711-6320c77cdffd",
            "sequence": [
              {
                "key": "test/inputs/23/kubernetes/kubectl.md",
                "title": "Install kubectl",
                "filepath": "test/inputs/23/kubernetes/kubectl.md",
                "graph": {
                  "key": "649f23d3-1e84-4d9f-9287-0d7a5eaf30db",
                  "sequence": [
                    {
                      "group": "Linux####Windows####MacOS",
                      "title": "Install kubectl",
                      "source": "placeholder",
                      "provenance": ["test/inputs/23/kubernetes/kubectl.md"],
                      "choices": [
                        {
                          "member": 0,
                          "graph": {
                            "key": "148c04b7-532c-4d59-bdb6-5a1e2393bc81",
                            "sequence": [
                              {
                                "body": "curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"",
                                "language": "bash",
                                "id": "6645a239-3679-4a2b-92ad-433643266135-12"
                              }
                            ]
                          },
                          "title": "Linux",
                          "description": "Download the latest release with the command:\n"
                        },
                        {
                          "member": 1,
                          "graph": {
                            "key": "b1eaa930-7051-4761-8b0e-1102569cb56d",
                            "sequence": [
                              {
                                "body": "curl -LO \"https://dl.k8s.io/release/v1.23.0/bin/windows/amd64/kubectl.exe\"",
                                "language": "bash",
                                "id": "6645a239-3679-4a2b-92ad-433643266135-13"
                              }
                            ]
                          },
                          "title": "Windows",
                          "description": "Download the latest release:\n"
                        },
                        {
                          "member": 2,
                          "graph": {
                            "key": "8934f219-bb10-4adc-8b69-b9e1cef0d8f3",
                            "sequence": [
                              {
                                "group": "Homebrew####curl",
                                "source": "placeholder",
                                "provenance": ["test/inputs/23/kubernetes/kubectl.md"],
                                "choices": [
                                  {
                                    "member": 0,
                                    "graph": {
                                      "key": "d849ab93-b4eb-41df-bd67-a840a6c6571e",
                                      "sequence": [
                                        {
                                          "body": "brew install kubectl",
                                          "language": "bash",
                                          "id": "6645a239-3679-4a2b-92ad-433643266135-14"
                                        }
                                      ]
                                    },
                                    "title": "Homebrew",
                                    "description": "\nIf you are on macOS and using Homebrew package manager, you can install kubectl with Homebrew."
                                  },
                                  {
                                    "member": 1,
                                    "graph": {
                                      "key": "365f3e26-164a-4152-bc3d-f6bcf92601fc",
                                      "sequence": [
                                        {
                                          "group": "Intel####Apple Silicon",
                                          "source": "placeholder",
                                          "provenance": ["test/inputs/23/kubernetes/kubectl.md"],
                                          "choices": [
                                            {
                                              "member": 0,
                                              "graph": {
                                                "key": "e0db8119-e8b4-4d7d-ae0d-586f2a628a8e",
                                                "sequence": [
                                                  {
                                                    "body": "curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/darwin/amd64/kubectl.sha256\"",
                                                    "language": "bash",
                                                    "id": "6645a239-3679-4a2b-92ad-433643266135-15"
                                                  }
                                                ]
                                              },
                                              "title": "Intel"
                                            },
                                            {
                                              "member": 1,
                                              "graph": {
                                                "key": "6d6c1b5c-7400-4d2f-bd4c-59cb05511195",
                                                "sequence": [
                                                  {
                                                    "body": "curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/darwin/arm64/kubectl.sha256\"",
                                                    "language": "bash",
                                                    "id": "6645a239-3679-4a2b-92ad-433643266135-16"
                                                  }
                                                ]
                                              },
                                              "title": "Apple Silicon"
                                            }
                                          ]
                                        },
                                        {
                                          "body": "curl -LO \"https://dl.k8s.io/release/v1.23.0/bin/darwin/amd64/kubectl\"\nAnd for macOS on Apple Silicon, type:\n    \ncurl -LO \"https://dl.k8s.io/release/v1.23.0/bin/darwin/arm64/kubectl\"",
                                          "language": "bash",
                                          "id": "6645a239-3679-4a2b-92ad-433643266135-17"
                                        }
                                      ]
                                    },
                                    "title": "curl",
                                    "description": "To download the latest release:\n"
                                  }
                                ]
                              }
                            ]
                          },
                          "title": "MacOS",
                          "description": "The following methods exist for installing kubectl on macOS:\n"
                        }
                      ]
                    }
                  ]
                },
                "source": "placeholder"
              },
              {
                "key": "test/inputs/23/kubernetes/helm3.md",
                "title": "Install Helm v3",
                "filepath": "test/inputs/23/kubernetes/helm3.md",
                "graph": {
                  "key": "d2ea21d6-4160-4c0c-aad2-906438401991",
                  "sequence": [
                    {
                      "group": "MacOS####Linux####Windows",
                      "title": "Install Helm v3",
                      "source": "placeholder",
                      "provenance": ["test/inputs/23/kubernetes/helm3.md"],
                      "choices": [
                        {
                          "member": 0,
                          "graph": {
                            "key": "506fc5f4-9be3-44e9-97cf-eb38da4405d5",
                            "sequence": [
                              {
                                "group": "Homebrew####curl",
                                "source": "placeholder",
                                "provenance": ["test/inputs/23/kubernetes/helm3.md"],
                                "choices": [
                                  {
                                    "member": 0,
                                    "graph": {
                                      "key": "a20dbfb5-fa6d-4c72-a565-3cb86860f4a7",
                                      "sequence": [
                                        {
                                          "body": "brew install helm",
                                          "language": "shell",
                                          "id": "6645a239-3679-4a2b-92ad-433643266135-18"
                                        }
                                      ]
                                    },
                                    "title": "Homebrew"
                                  },
                                  {
                                    "member": 1,
                                    "graph": {
                                      "key": "1057a055-2c56-484d-b71f-2883de00c6a9",
                                      "sequence": [
                                        {
                                          "body": "bash $<(curl -L https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3)",
                                          "language": "shell",
                                          "id": "6645a239-3679-4a2b-92ad-433643266135-19"
                                        }
                                      ]
                                    },
                                    "title": "curl"
                                  }
                                ]
                              }
                            ]
                          },
                          "title": "MacOS"
                        },
                        {
                          "member": 1,
                          "graph": {
                            "key": "804b38d9-892a-45be-ad1c-cf45dafed5aa",
                            "sequence": [
                              {
                                "body": "bash $<(curl -L https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3)",
                                "language": "shell",
                                "id": "6645a239-3679-4a2b-92ad-433643266135-20"
                              }
                            ]
                          },
                          "title": "Linux"
                        },
                        {
                          "member": 2,
                          "graph": {
                            "key": "b366fafd-0975-452d-9849-0822fdcb3ecc",
                            "sequence": [
                              {
                                "body": "bash $<(curl -L https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3)",
                                "language": "shell",
                                "id": "6645a239-3679-4a2b-92ad-433643266135-21"
                              }
                            ]
                          },
                          "title": "Windows"
                        }
                      ]
                    }
                  ]
                },
                "source": "placeholder"
              },
              {
                "key": "test/inputs/23/kubernetes/context.md",
                "title": "Choose a Kubernetes context",
                "filepath": "test/inputs/23/kubernetes/context.md",
                "graph": {
                  "key": "dc8b45c0-09fc-4618-90f9-ca0918caa4b5",
                  "sequence": [
                    {
                      "key": "test/inputs/23/kubernetes/kubectl.md",
                      "title": "Install kubectl",
                      "filepath": "test/inputs/23/kubernetes/kubectl.md",
                      "graph": {
                        "key": "1b7919cf-69ab-4708-99ba-555fb93d12ff",
                        "sequence": [
                          {
                            "group": "Linux####Windows####MacOS",
                            "title": "Install kubectl",
                            "source": "placeholder",
                            "provenance": ["test/inputs/23/kubernetes/kubectl.md"],
                            "choices": [
                              {
                                "member": 0,
                                "graph": {
                                  "key": "1b86164f-3462-48b6-bb28-05bb4fa1e614",
                                  "sequence": [
                                    {
                                      "body": "curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"",
                                      "language": "bash",
                                      "id": "6645a239-3679-4a2b-92ad-433643266135-22"
                                    }
                                  ]
                                },
                                "title": "Linux",
                                "description": "Download the latest release with the command:\n"
                              },
                              {
                                "member": 1,
                                "graph": {
                                  "key": "50364e48-2efc-4e40-94a4-6618c85c9b3e",
                                  "sequence": [
                                    {
                                      "body": "curl -LO \"https://dl.k8s.io/release/v1.23.0/bin/windows/amd64/kubectl.exe\"",
                                      "language": "bash",
                                      "id": "6645a239-3679-4a2b-92ad-433643266135-23"
                                    }
                                  ]
                                },
                                "title": "Windows",
                                "description": "Download the latest release:\n"
                              },
                              {
                                "member": 2,
                                "graph": {
                                  "key": "26a690ad-fcff-4b1e-9d6d-be52d06468fb",
                                  "sequence": [
                                    {
                                      "group": "Homebrew####curl",
                                      "source": "placeholder",
                                      "provenance": ["test/inputs/23/kubernetes/kubectl.md"],
                                      "choices": [
                                        {
                                          "member": 0,
                                          "graph": {
                                            "key": "5adecfc7-8ef3-498e-a017-f0dd705f4d6b",
                                            "sequence": [
                                              {
                                                "body": "brew install kubectl",
                                                "language": "bash",
                                                "id": "6645a239-3679-4a2b-92ad-433643266135-24"
                                              }
                                            ]
                                          },
                                          "title": "Homebrew",
                                          "description": "\nIf you are on macOS and using Homebrew package manager, you can install kubectl with Homebrew."
                                        },
                                        {
                                          "member": 1,
                                          "graph": {
                                            "key": "39b30848-8ce2-49be-bc70-3683ce35d974",
                                            "sequence": [
                                              {
                                                "group": "Intel####Apple Silicon",
                                                "source": "placeholder",
                                                "provenance": ["test/inputs/23/kubernetes/kubectl.md"],
                                                "choices": [
                                                  {
                                                    "member": 0,
                                                    "graph": {
                                                      "key": "4a2cac97-86b1-4442-930c-fe8c197b61f4",
                                                      "sequence": [
                                                        {
                                                          "body": "curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/darwin/amd64/kubectl.sha256\"",
                                                          "language": "bash",
                                                          "id": "6645a239-3679-4a2b-92ad-433643266135-25"
                                                        }
                                                      ]
                                                    },
                                                    "title": "Intel"
                                                  },
                                                  {
                                                    "member": 1,
                                                    "graph": {
                                                      "key": "3575a935-0fe3-4280-8af6-01d670d98d81",
                                                      "sequence": [
                                                        {
                                                          "body": "curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/darwin/arm64/kubectl.sha256\"",
                                                          "language": "bash",
                                                          "id": "6645a239-3679-4a2b-92ad-433643266135-26"
                                                        }
                                                      ]
                                                    },
                                                    "title": "Apple Silicon"
                                                  }
                                                ]
                                              },
                                              {
                                                "body": "curl -LO \"https://dl.k8s.io/release/v1.23.0/bin/darwin/amd64/kubectl\"\nAnd for macOS on Apple Silicon, type:\n    \ncurl -LO \"https://dl.k8s.io/release/v1.23.0/bin/darwin/arm64/kubectl\"",
                                                "language": "bash",
                                                "id": "6645a239-3679-4a2b-92ad-433643266135-27"
                                              }
                                            ]
                                          },
                                          "title": "curl",
                                          "description": "To download the latest release:\n"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "title": "MacOS",
                                "description": "The following methods exist for installing kubectl on macOS:\n"
                              }
                            ]
                          }
                        ]
                      },
                      "source": "placeholder"
                    },
                    {
                      "group": "fakeit",
                      "title": "Choose a Kubernetes context",
                      "source": "placeholder",
                      "provenance": ["test/inputs/23/kubernetes/context.md"],
                      "choices": [
                        {
                          "member": 0,
                          "graph": {
                            "key": "74208ca4-0965-4d91-92dd-64a702566ad7",
                            "sequence": [
                              {
                                "body": "kubectl config set-context \"${choice}\"",
                                "language": "shell",
                                "id": "6645a239-3679-4a2b-92ad-433643266135-28"
                              }
                            ]
                          },
                          "title": "fakeit"
                        }
                      ]
                    }
                  ]
                },
                "source": "placeholder"
              },
              {
                "body": "helm -n ray install example-cluster --create-namespace https://github.com/ray-project/ray/tree/master/deploy/charts/ray/\nkubectl wait --for=condition=available --all rayclusters",
                "language": "shell",
                "id": "6645a239-3679-4a2b-92ad-433643266135-29"
              }
            ]
          },
          "title": "Kubernetes Install",
          "description": "This will install Ray on a Kubernetes context of your choosing.\n"
        }
      ]
    },
    "step": {
      "name": "Install Ray",
      "description": "This step requires you to choose how to proceed",
      "content": [
        {
          "title": "Local Install",
          "group": "Local Install####Kubernetes Install",
          "member": 0,
          "isFirstChoice": true,
          "description": "\nThis will install Ray on your laptop."
        },
        {
          "title": "Kubernetes Install",
          "group": "Local Install####Kubernetes Install",
          "member": 1,
          "isFirstChoice": true,
          "description": "This will install Ray on a Kubernetes context of your choosing.\n"
        }
      ]
    }
  },
  {
    "graph": {
      "group": "Example: Using Ray Tasks to Parallelize a Function####Example: Using Ray Actors to Parallelize a Class####Example: Creating and Transforming Datasets",
      "title": "Run a Ray Job",
      "source": "placeholder",
      "provenance": ["test/inputs/23/in.md"],
      "choices": [
        {
          "member": 0,
          "graph": {
            "key": "62835e80-497d-4bbd-99d8-d609c2b931fd",
            "sequence": [
              {
                "body": "import ray\nray.init()\n\n@ray.remote\ndef f(x):\n    return x * x\n\nfutures = [f.remote(i) for i in range(4)]\nprint(ray.get(futures)) # [0, 1, 4, 9]",
                "language": "python",
                "id": "6645a239-3679-4a2b-92ad-433643266135-30"
              }
            ]
          },
          "title": "Example: Using Ray Tasks to Parallelize a Function",
          "description": "First, you import Ray and and initialize it with `ray.init()`. Then you decorate your function with `@ray.remote` to declare that you want to run this function remotely. Lastly, you call that function with `.remote()` instead of calling it normally. This remote call yields a future, a so-called Ray object reference, that you can then fetch with `ray.get`.\n"
        },
        {
          "member": 1,
          "graph": {
            "key": "37c02788-2e63-40e8-a718-810f40a6f3c6",
            "sequence": [
              {
                "body": "import ray\nray.init() # Only call this once.\n\n@ray.remote\nclass Counter(object):\n    def __init__(self):\n        self.n = 0\n\n    def increment(self):\n        self.n += 1\n\n    def read(self):\n        return self.n\n\ncounters = [Counter.remote() for i in range(4)]\n[c.increment.remote() for c in counters]\nfutures = [c.read.remote() for c in counters]\nprint(ray.get(futures)) # [1, 1, 1, 1]",
                "language": "python",
                "id": "6645a239-3679-4a2b-92ad-433643266135-31"
              }
            ]
          },
          "title": "Example: Using Ray Actors to Parallelize a Class",
          "description": "Ray provides actors to allow you to parallelize an instance of a class in Python or Java. When you instantiate a class that is a Ray actor, Ray will start a remote instance of that class in the cluster. This actor can then execute remote method calls and maintain its own internal state.\n"
        },
        {
          "member": 2,
          "graph": {
            "key": "30179189-3dd0-4da6-a07d-8dc3937b6e78",
            "sequence": [
              {
                "key": "test/inputs/23/data.md",
                "title": "Install Ray Data",
                "filepath": "test/inputs/23/data.md",
                "graph": {
                  "key": "199a4c1f-56e2-4deb-bb7b-14e8b42bfbeb",
                  "sequence": [
                    {
                      "body": "pip install \"ray[data]\" dask",
                      "language": "shell",
                      "id": "6645a239-3679-4a2b-92ad-433643266135-32"
                    }
                  ]
                },
                "source": "placeholder"
              },
              {
                "group": "New Dataset from Range####New Dataset from File",
                "title": "Creating and Transforming Datasets",
                "source": "placeholder",
                "provenance": ["test/inputs/23/in.md"],
                "choices": [
                  {
                    "member": 0,
                    "graph": {
                      "key": "8beaad00-68f5-47cb-ab8a-118ea246ede7",
                      "sequence": [
                        {
                          "body": "import ray\n\n# Create a Dataset of Python objects.\nds = ray.data.range(10000)\n# -> Dataset(num_blocks=200, num_rows=10000, schema=<class 'int'>)\n\nds.take(5)\n# -> [0, 1, 2, 3, 4]\n\nds.count()\n# -> 10000\n\n# Create a Dataset of Arrow records.\nds = ray.data.from_items([{\"col1\": i, \"col2\": str(i)} for i in range(10000)])\n# -> Dataset(num_blocks=200, num_rows=10000, schema={col1: int64, col2: string})\n\nds.show(5)\n# -> {'col1': 0, 'col2': '0'}\n# -> {'col1': 1, 'col2': '1'}\n# -> {'col1': 2, 'col2': '2'}\n# -> {'col1': 3, 'col2': '3'}\n# -> {'col1': 4, 'col2': '4'}\n\nds.schema()\n# -> col1: int64\n# -> col2: string",
                          "language": "python",
                          "id": "6645a239-3679-4a2b-92ad-433643266135-33"
                        }
                      ]
                    },
                    "title": "New Dataset from Range",
                    "description": "\nGet started by creating Datasets from synthetic data using\n"
                  },
                  {
                    "member": 1,
                    "graph": {
                      "key": "bd7f0276-a4f0-4b84-8086-0478462bd1a5",
                      "sequence": [
                        {
                          "body": "import ray\nimport pandas as pd\nimport dask.dataframe as dd\n\n# Create a Dataset from a list of Pandas DataFrame objects.\npdf = pd.DataFrame({\"one\": [1, 2, 3], \"two\": [\"a\", \"b\", \"c\"]})\nds = ray.data.from_pandas([pdf])\n\n# Create a Dataset from a Dask-on-Ray DataFrame.\ndask_df = dd.from_pandas(pdf, npartitions=10)\nds = ray.data.from_dask(dask_df)\n\n# Transform the dataset using .map()\nds = ray.data.range(10000)\nds = ds.map(lambda x: x * 2)\n# -> Map Progress: 100%|████████████████████| 200/200 [00:00<00:00, 1123.54it/s]\n# -> Dataset(num_blocks=200, num_rows=10000, schema=<class 'int'>)\nds.take(5)\n# -> [0, 2, 4, 6, 8]\n\n# Transform the dataset using .filter()\nds.filter(lambda x: x > 5).take(5)\n# -> Map Progress: 100%|████████████████████| 200/200 [00:00<00:00, 1859.63it/s]\n# -> [6, 8, 10, 12, 14]\n\n# Transform the dataset using .flat_map()\nds.flat_map(lambda x: [x, -x]).take(5)\n# -> Map Progress: 100%|████████████████████| 200/200 [00:00<00:00, 1568.10it/s]\n# -> [0, 0, 2, -2, 4]",
                          "language": "python",
                          "id": "6645a239-3679-4a2b-92ad-433643266135-34"
                        }
                      ]
                    },
                    "title": "New Dataset from File",
                    "description": "\nDatasets can be created from files on local disk or remote datasources\nsuch as S3. Any filesystem "
                  }
                ]
              }
            ]
          },
          "title": "Example: Creating and Transforming Datasets",
          "description": "Ray Datasets are the standard way to load and exchange data in Ray libraries and applications. They provide basic distributed data transformations such as `map`, `filter`, and `repartition`, and are compatible with a variety of file formats, data sources, and distributed frameworks.\n"
        }
      ]
    },
    "step": {
      "name": "Run a Ray Job",
      "description": "This step requires you to choose how to proceed",
      "content": [
        {
          "title": "Example: Using Ray Tasks to Parallelize a Function",
          "group": "Example: Using Ray Tasks to Parallelize a Function####Example: Using Ray Actors to Parallelize a Class####Example: Creating and Transforming Datasets",
          "member": 0,
          "isFirstChoice": false,
          "description": "First, you import Ray and and initialize it with `ray.init()`. Then you decorate your function with `@ray.remote` to declare that you want to run this function remotely. Lastly, you call that function with `.remote()` instead of calling it normally. This remote call yields a future, a so-called Ray object reference, that you can then fetch with `ray.get`.\n"
        },
        {
          "title": "Example: Using Ray Actors to Parallelize a Class",
          "group": "Example: Using Ray Tasks to Parallelize a Function####Example: Using Ray Actors to Parallelize a Class####Example: Creating and Transforming Datasets",
          "member": 1,
          "isFirstChoice": false,
          "description": "Ray provides actors to allow you to parallelize an instance of a class in Python or Java. When you instantiate a class that is a Ray actor, Ray will start a remote instance of that class in the cluster. This actor can then execute remote method calls and maintain its own internal state.\n"
        },
        {
          "title": "Example: Creating and Transforming Datasets",
          "group": "Example: Using Ray Tasks to Parallelize a Function####Example: Using Ray Actors to Parallelize a Class####Example: Creating and Transforming Datasets",
          "member": 2,
          "isFirstChoice": false,
          "description": "Ray Datasets are the standard way to load and exchange data in Ray libraries and applications. They provide basic distributed data transformations such as `map`, `filter`, and `repartition`, and are compatible with a variety of file formats, data sources, and distributed frameworks.\n"
        }
      ]
    }
  }
]

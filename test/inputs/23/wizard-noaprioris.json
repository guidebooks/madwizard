[
  {
    "graph": {
      "group": "Local Install####Kubernetes Install",
      "title": "Install Ray",
      "source": "placeholder",
      "provenance": ["test/inputs/23/install/index.md"],
      "choices": [
        {
          "member": 0,
          "graph": {
            "key": "1f9544ec-ba4e-41e2-9383-4931878907c6",
            "sequence": [
              {
                "group": "Intel####Apple Silicon",
                "title": "Local Install",
                "source": "placeholder",
                "provenance": ["test/inputs/23/install/index.md"],
                "choices": [
                  {
                    "member": 0,
                    "graph": {
                      "key": "c058fb15-2e55-455a-a2e2-cd2d4f73f07d",
                      "sequence": [
                        {
                          "body": "pip install -U ray",
                          "language": "shell",
                          "id": "1605f629-ac85-43c5-9822-c03ca68f6ce5-0"
                        }
                      ]
                    },
                    "title": "Intel",
                    "description": "\nIf you are running on x86/Intel hardware."
                  },
                  {
                    "member": 1,
                    "graph": {
                      "key": "ca6409af-4bdc-40f2-9294-f4eac64f4dac",
                      "sequence": [
                        {
                          "key": "test/inputs/23/python/conda/install.md",
                          "title": "Conda: Installation",
                          "filepath": "test/inputs/23/python/conda/install.md",
                          "graph": {
                            "key": "102c1b83-a832-45c6-ba6e-c7abf6330925",
                            "sequence": [
                              {
                                "group": "Install Miniconda####Install Anaconda",
                                "title": "Choose a Conda Installation Method",
                                "source": "placeholder",
                                "provenance": ["test/inputs/23/python/conda/install.md"],
                                "choices": [
                                  {
                                    "member": 0,
                                    "graph": {
                                      "key": "48fa5775-fbda-404e-b7fa-e8079d38e839",
                                      "sequence": [
                                        {
                                          "group": "Windows####Linux####MacOS",
                                          "title": "Install Miniconda",
                                          "source": "placeholder",
                                          "provenance": ["test/inputs/23/python/conda/install.md"],
                                          "choices": [
                                            {
                                              "member": 1,
                                              "graph": {
                                                "key": "ffd997a0-5616-4c2c-a3a6-d8b0e6da2b3e",
                                                "sequence": [
                                                  {
                                                    "group": "Intel####ARM64",
                                                    "title": "Linux",
                                                    "source": "placeholder",
                                                    "provenance": ["test/inputs/23/python/conda/install.md"],
                                                    "choices": [
                                                      {
                                                        "member": 0,
                                                        "graph": {
                                                          "key": "5ce97bf9-5ce1-4d82-b5da-1a99c5a34f37",
                                                          "sequence": [
                                                            {
                                                              "body": "curl -LO https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh\nbash Miniconda3-latest-Linux-x86_64.sh -b -p ~/miniconda",
                                                              "language": "shell",
                                                              "id": "1605f629-ac85-43c5-9822-c03ca68f6ce5-1"
                                                            }
                                                          ]
                                                        },
                                                        "title": "Intel"
                                                      },
                                                      {
                                                        "member": 1,
                                                        "graph": {
                                                          "key": "377b910d-96ad-43e9-91b3-18668fdc6898",
                                                          "sequence": [
                                                            {
                                                              "body": "curl -LO https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-aarch64.sh\nbash Miniconda3-latest-Linux-aarch64.sh -b -p $HOME/miniconda",
                                                              "language": "shell",
                                                              "id": "1605f629-ac85-43c5-9822-c03ca68f6ce5-2"
                                                            }
                                                          ]
                                                        },
                                                        "title": "ARM64"
                                                      }
                                                    ]
                                                  }
                                                ]
                                              },
                                              "title": "Linux",
                                              "description": "\nIf you are running a Linux OS."
                                            },
                                            {
                                              "member": 2,
                                              "graph": {
                                                "key": "d75ac770-4a91-43d4-8d11-16cb9c1778d9",
                                                "sequence": [
                                                  {
                                                    "group": "Intel####Apple Silicon",
                                                    "title": "MacOS",
                                                    "source": "placeholder",
                                                    "provenance": ["test/inputs/23/python/conda/install.md"],
                                                    "choices": [
                                                      {
                                                        "member": 0,
                                                        "graph": {
                                                          "key": "69900330-83e5-4f9d-ba06-5e6846e36d65",
                                                          "sequence": [
                                                            {
                                                              "body": "curl -LO https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh\nbash Miniconda3-latest-MacOSX-x86_64.sh -b -p $HOME/miniconda",
                                                              "language": "shell",
                                                              "id": "1605f629-ac85-43c5-9822-c03ca68f6ce5-3"
                                                            }
                                                          ]
                                                        },
                                                        "title": "Intel",
                                                        "description": "\nIf you are running on x86/Intel hardware."
                                                      },
                                                      {
                                                        "member": 1,
                                                        "graph": {
                                                          "key": "87fbdd1c-ed94-4aa5-a7c6-08342a2e423b",
                                                          "sequence": [
                                                            {
                                                              "body": "curl -LO https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-arm64.sh\nbash Miniconda3-latest-MacOSX-arm64.sh -b -p $HOME/miniconda",
                                                              "language": "shell",
                                                              "id": "1605f629-ac85-43c5-9822-c03ca68f6ce5-4"
                                                            }
                                                          ]
                                                        },
                                                        "title": "Apple Silicon",
                                                        "description": "\nIf you are running on Apple Silicon/ARM hardware."
                                                      }
                                                    ]
                                                  }
                                                ]
                                              },
                                              "title": "MacOS",
                                              "description": "\nIf you are running MacOS."
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "title": "Install Miniconda",
                                    "description": "\nMiniconda is a free minimal installer for conda. It is a small, bootstrap version of Anaconda that includes only conda, Python, the packages they depend on, and a small number of other useful packages, including pip, zlib and a few others. "
                                  },
                                  {
                                    "member": 1,
                                    "graph": {
                                      "key": "5eee237a-2a1e-40f7-a266-bf7b41743f95",
                                      "sequence": [
                                        {
                                          "group": "MacOS####Linux",
                                          "title": "Install Anaconda",
                                          "source": "placeholder",
                                          "provenance": ["test/inputs/23/python/conda/install.md"],
                                          "choices": [
                                            {
                                              "member": 0,
                                              "graph": {
                                                "key": "cac82e29-3b15-4806-81a5-c11a8b7ae848",
                                                "sequence": [
                                                  {
                                                    "body": "curl -LO https://repo.anaconda.com/archive/Anaconda3-2021.11-MacOSX-x86_64.sh\nbash Anaconda3-2021.11-MacOSX-x86_64.sh -b -p $HOME/miniconda",
                                                    "language": "shell",
                                                    "id": "1605f629-ac85-43c5-9822-c03ca68f6ce5-5"
                                                  }
                                                ]
                                              },
                                              "title": "MacOS"
                                            },
                                            {
                                              "member": 1,
                                              "graph": {
                                                "key": "7f2b9613-c002-4609-9ee5-4e5acdce06b6",
                                                "sequence": [
                                                  {
                                                    "group": "x86####POWER8 and POWER9####AWS Graviton2/ARM64####IBM z/Linux and LinuxONE",
                                                    "title": "Linux",
                                                    "source": "placeholder",
                                                    "provenance": ["test/inputs/23/python/conda/install.md"],
                                                    "choices": [
                                                      {
                                                        "member": 0,
                                                        "graph": {
                                                          "key": "657fa49d-51c5-4f3d-82a7-5bb4a48ecc21",
                                                          "sequence": [
                                                            {
                                                              "body": "curl -LO https://repo.anaconda.com/archive/Anaconda3-2021.11-Linux-x86_64.sh\nbash Anaconda3-2021.11-Linux-x86_64.sh -b -p $HOME/miniconda",
                                                              "language": "shell",
                                                              "id": "1605f629-ac85-43c5-9822-c03ca68f6ce5-6"
                                                            }
                                                          ]
                                                        },
                                                        "title": "x86"
                                                      },
                                                      {
                                                        "member": 1,
                                                        "graph": {
                                                          "key": "2a68c42d-88dd-4162-9731-8d2faeaadf76",
                                                          "sequence": [
                                                            {
                                                              "body": "curl -LO https://repo.anaconda.com/archive/Anaconda3-2021.11-Linux-ppc64le.sh\nbash Anaconda3-2021.11-Linux-ppc64le.sh -b -p $HOME/miniconda",
                                                              "language": "shell",
                                                              "id": "1605f629-ac85-43c5-9822-c03ca68f6ce5-7"
                                                            }
                                                          ]
                                                        },
                                                        "title": "POWER8 and POWER9"
                                                      },
                                                      {
                                                        "member": 2,
                                                        "graph": {
                                                          "key": "01a627ef-b2d3-4204-8b5d-79a34f9363bc",
                                                          "sequence": [
                                                            {
                                                              "body": "curl -LO https://repo.anaconda.com/archive/Anaconda3-2021.11-Linux-aarch64.sh\nbash Anaconda3-2021.11-Linux-aarch64.sh -b -p $HOME/miniconda",
                                                              "language": "shell",
                                                              "id": "1605f629-ac85-43c5-9822-c03ca68f6ce5-8"
                                                            }
                                                          ]
                                                        },
                                                        "title": "AWS Graviton2/ARM64"
                                                      },
                                                      {
                                                        "member": 3,
                                                        "graph": {
                                                          "key": "4920a635-a85c-458f-bbf7-cea275d7feb2",
                                                          "sequence": [
                                                            {
                                                              "body": "curl -LO https://repo.anaconda.com/archive/Anaconda3-2021.11-Linux-s390x.sh\nbash Anaconda3-2021.11-Linux-s390x.sh -b -p $HOME/miniconda",
                                                              "language": "shell",
                                                              "id": "1605f629-ac85-43c5-9822-c03ca68f6ce5-9"
                                                            }
                                                          ]
                                                        },
                                                        "title": "IBM z/Linux and LinuxONE"
                                                      }
                                                    ]
                                                  }
                                                ]
                                              },
                                              "title": "Linux"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "title": "Install Anaconda",
                                    "description": "\nThis will install Miniconda plus hundreds of packages."
                                  }
                                ]
                              },
                              {
                                "body": "export PATH=~/miniconda/bin:$PATH",
                                "language": "shell",
                                "id": "1605f629-ac85-43c5-9822-c03ca68f6ce5-10"
                              }
                            ]
                          },
                          "source": "placeholder"
                        },
                        {
                          "body": "conda activate\npip uninstall grpcio\nconda install grpcio\npip install ray",
                          "language": "shell",
                          "id": "1605f629-ac85-43c5-9822-c03ca68f6ce5-11"
                        }
                      ]
                    },
                    "title": "Apple Silicon",
                    "description": "\nIf you are running on Apple Silicon/ARM hardware."
                  }
                ]
              }
            ]
          },
          "title": "Local Install",
          "description": "\nThis will install Ray on your laptop."
        },
        {
          "member": 1,
          "graph": {
            "key": "41d10fd9-b8d9-45ed-a28d-970d87edca41",
            "sequence": [
              {
                "key": "test/inputs/23/kubernetes/kubectl.md",
                "title": "Install kubectl",
                "filepath": "test/inputs/23/kubernetes/kubectl.md",
                "graph": {
                  "key": "a7518a4f-9722-4b89-a85f-5ae48712d653",
                  "sequence": [
                    {
                      "group": "Linux####Windows####MacOS",
                      "title": "Install kubectl",
                      "source": "placeholder",
                      "provenance": ["test/inputs/23/kubernetes/kubectl.md"],
                      "choices": [
                        {
                          "member": 0,
                          "graph": {
                            "key": "7fe6cfd8-4374-4e3c-a5de-aaa6a98b691c",
                            "sequence": [
                              {
                                "body": "curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"",
                                "language": "bash",
                                "id": "1605f629-ac85-43c5-9822-c03ca68f6ce5-12"
                              }
                            ]
                          },
                          "title": "Linux",
                          "description": "Download the latest release with the command:\n"
                        },
                        {
                          "member": 1,
                          "graph": {
                            "key": "951e4fed-0302-4d0f-bb2b-0361ace5790f",
                            "sequence": [
                              {
                                "body": "curl -LO \"https://dl.k8s.io/release/v1.23.0/bin/windows/amd64/kubectl.exe\"",
                                "language": "bash",
                                "id": "1605f629-ac85-43c5-9822-c03ca68f6ce5-13"
                              }
                            ]
                          },
                          "title": "Windows",
                          "description": "Download the latest release:\n"
                        },
                        {
                          "member": 2,
                          "graph": {
                            "key": "73f94fd4-6e11-4af8-820b-899e83094127",
                            "sequence": [
                              {
                                "group": "Homebrew####curl",
                                "title": "MacOS",
                                "source": "placeholder",
                                "provenance": ["test/inputs/23/kubernetes/kubectl.md"],
                                "choices": [
                                  {
                                    "member": 0,
                                    "graph": {
                                      "key": "e9d619be-9fcd-482d-8ca5-68bc532349fe",
                                      "sequence": [
                                        {
                                          "body": "brew install kubectl",
                                          "language": "bash",
                                          "id": "1605f629-ac85-43c5-9822-c03ca68f6ce5-14"
                                        }
                                      ]
                                    },
                                    "title": "Homebrew",
                                    "description": "\nIf you are on macOS and using Homebrew package manager, you can install kubectl with Homebrew."
                                  },
                                  {
                                    "member": 1,
                                    "graph": {
                                      "key": "d055b6b2-d5ba-45ae-8a3c-c83bf989ae34",
                                      "sequence": [
                                        {
                                          "group": "Intel####Apple Silicon",
                                          "title": "curl",
                                          "source": "placeholder",
                                          "provenance": ["test/inputs/23/kubernetes/kubectl.md"],
                                          "choices": [
                                            {
                                              "member": 0,
                                              "graph": {
                                                "key": "319622b7-f753-43bb-ac47-4c300937e07b",
                                                "sequence": [
                                                  {
                                                    "body": "curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/darwin/amd64/kubectl.sha256\"",
                                                    "language": "bash",
                                                    "id": "1605f629-ac85-43c5-9822-c03ca68f6ce5-15"
                                                  }
                                                ]
                                              },
                                              "title": "Intel"
                                            },
                                            {
                                              "member": 1,
                                              "graph": {
                                                "key": "05805212-3f37-4dc6-86d8-80a40a0ada71",
                                                "sequence": [
                                                  {
                                                    "body": "curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/darwin/arm64/kubectl.sha256\"",
                                                    "language": "bash",
                                                    "id": "1605f629-ac85-43c5-9822-c03ca68f6ce5-16"
                                                  }
                                                ]
                                              },
                                              "title": "Apple Silicon"
                                            }
                                          ]
                                        },
                                        {
                                          "body": "curl -LO \"https://dl.k8s.io/release/v1.23.0/bin/darwin/amd64/kubectl\"\nAnd for macOS on Apple Silicon, type:\n    \ncurl -LO \"https://dl.k8s.io/release/v1.23.0/bin/darwin/arm64/kubectl\"",
                                          "language": "bash",
                                          "id": "1605f629-ac85-43c5-9822-c03ca68f6ce5-17"
                                        }
                                      ]
                                    },
                                    "title": "curl",
                                    "description": "To download the latest release:\n"
                                  }
                                ]
                              }
                            ]
                          },
                          "title": "MacOS",
                          "description": "The following methods exist for installing kubectl on macOS:\n"
                        }
                      ]
                    }
                  ]
                },
                "source": "placeholder"
              },
              {
                "key": "test/inputs/23/kubernetes/helm3.md",
                "title": "Install Helm v3",
                "filepath": "test/inputs/23/kubernetes/helm3.md",
                "graph": {
                  "key": "29d99a83-9ec4-45bd-a39f-29a4a92e684e",
                  "sequence": [
                    {
                      "group": "MacOS####Linux####Windows",
                      "title": "Install Helm v3",
                      "source": "placeholder",
                      "provenance": ["test/inputs/23/kubernetes/helm3.md"],
                      "choices": [
                        {
                          "member": 0,
                          "graph": {
                            "key": "52f8eb3e-3bbc-42a4-a3b1-567a41ea72f5",
                            "sequence": [
                              {
                                "group": "Homebrew####curl",
                                "title": "MacOS",
                                "source": "placeholder",
                                "provenance": ["test/inputs/23/kubernetes/helm3.md"],
                                "choices": [
                                  {
                                    "member": 0,
                                    "graph": {
                                      "key": "ef42fc93-d88f-4a48-bd84-fc244bf2f5e1",
                                      "sequence": [
                                        {
                                          "body": "brew install helm",
                                          "language": "shell",
                                          "id": "1605f629-ac85-43c5-9822-c03ca68f6ce5-18"
                                        }
                                      ]
                                    },
                                    "title": "Homebrew"
                                  },
                                  {
                                    "member": 1,
                                    "graph": {
                                      "key": "9cea889c-85db-4bb7-909b-e5802e9199fe",
                                      "sequence": [
                                        {
                                          "body": "bash $<(curl -L https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3)",
                                          "language": "shell",
                                          "id": "1605f629-ac85-43c5-9822-c03ca68f6ce5-19"
                                        }
                                      ]
                                    },
                                    "title": "curl"
                                  }
                                ]
                              }
                            ]
                          },
                          "title": "MacOS"
                        },
                        {
                          "member": 1,
                          "graph": {
                            "key": "3c2f5ad0-e8c6-4ca9-a04f-2052e0097f0f",
                            "sequence": [
                              {
                                "body": "bash $<(curl -L https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3)",
                                "language": "shell",
                                "id": "1605f629-ac85-43c5-9822-c03ca68f6ce5-20"
                              }
                            ]
                          },
                          "title": "Linux"
                        },
                        {
                          "member": 2,
                          "graph": {
                            "key": "b99a19e0-d5cf-47cb-b70c-1ca7a596237e",
                            "sequence": [
                              {
                                "body": "bash $<(curl -L https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3)",
                                "language": "shell",
                                "id": "1605f629-ac85-43c5-9822-c03ca68f6ce5-21"
                              }
                            ]
                          },
                          "title": "Windows"
                        }
                      ]
                    }
                  ]
                },
                "source": "placeholder"
              },
              {
                "key": "test/inputs/23/kubernetes/context.md",
                "title": "Choose a Kubernetes context",
                "filepath": "test/inputs/23/kubernetes/context.md",
                "graph": {
                  "key": "1c823f94-2a98-4f49-8ae2-bcf9389196b0",
                  "sequence": [
                    {
                      "key": "test/inputs/23/kubernetes/kubectl.md",
                      "title": "Install kubectl",
                      "filepath": "test/inputs/23/kubernetes/kubectl.md",
                      "graph": {
                        "key": "a26db3a4-d845-4fd3-9526-972de00a5e1a",
                        "sequence": [
                          {
                            "group": "Linux####Windows####MacOS",
                            "title": "Install kubectl",
                            "source": "placeholder",
                            "provenance": ["test/inputs/23/kubernetes/kubectl.md"],
                            "choices": [
                              {
                                "member": 0,
                                "graph": {
                                  "key": "4868fae7-3db7-40e2-ac9c-efdea66019ad",
                                  "sequence": [
                                    {
                                      "body": "curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"",
                                      "language": "bash",
                                      "id": "1605f629-ac85-43c5-9822-c03ca68f6ce5-22"
                                    }
                                  ]
                                },
                                "title": "Linux",
                                "description": "Download the latest release with the command:\n"
                              },
                              {
                                "member": 1,
                                "graph": {
                                  "key": "db9efebe-31d9-41da-a962-72f9f5c6b0e5",
                                  "sequence": [
                                    {
                                      "body": "curl -LO \"https://dl.k8s.io/release/v1.23.0/bin/windows/amd64/kubectl.exe\"",
                                      "language": "bash",
                                      "id": "1605f629-ac85-43c5-9822-c03ca68f6ce5-23"
                                    }
                                  ]
                                },
                                "title": "Windows",
                                "description": "Download the latest release:\n"
                              },
                              {
                                "member": 2,
                                "graph": {
                                  "key": "7ba02bba-8cb3-445e-9d48-5b2fad85e857",
                                  "sequence": [
                                    {
                                      "group": "Homebrew####curl",
                                      "title": "MacOS",
                                      "source": "placeholder",
                                      "provenance": ["test/inputs/23/kubernetes/kubectl.md"],
                                      "choices": [
                                        {
                                          "member": 0,
                                          "graph": {
                                            "key": "396866ae-2d12-437f-a004-fda732c8b425",
                                            "sequence": [
                                              {
                                                "body": "brew install kubectl",
                                                "language": "bash",
                                                "id": "1605f629-ac85-43c5-9822-c03ca68f6ce5-24"
                                              }
                                            ]
                                          },
                                          "title": "Homebrew",
                                          "description": "\nIf you are on macOS and using Homebrew package manager, you can install kubectl with Homebrew."
                                        },
                                        {
                                          "member": 1,
                                          "graph": {
                                            "key": "dbfe9c08-1d9a-4e9d-8b86-652aef48d1e4",
                                            "sequence": [
                                              {
                                                "group": "Intel####Apple Silicon",
                                                "title": "curl",
                                                "source": "placeholder",
                                                "provenance": ["test/inputs/23/kubernetes/kubectl.md"],
                                                "choices": [
                                                  {
                                                    "member": 0,
                                                    "graph": {
                                                      "key": "f83173fa-a2cf-489d-bc83-a0911ec97ce2",
                                                      "sequence": [
                                                        {
                                                          "body": "curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/darwin/amd64/kubectl.sha256\"",
                                                          "language": "bash",
                                                          "id": "1605f629-ac85-43c5-9822-c03ca68f6ce5-25"
                                                        }
                                                      ]
                                                    },
                                                    "title": "Intel"
                                                  },
                                                  {
                                                    "member": 1,
                                                    "graph": {
                                                      "key": "e3798074-4a27-445f-97d5-58ea6a7e0c5e",
                                                      "sequence": [
                                                        {
                                                          "body": "curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/darwin/arm64/kubectl.sha256\"",
                                                          "language": "bash",
                                                          "id": "1605f629-ac85-43c5-9822-c03ca68f6ce5-26"
                                                        }
                                                      ]
                                                    },
                                                    "title": "Apple Silicon"
                                                  }
                                                ]
                                              },
                                              {
                                                "body": "curl -LO \"https://dl.k8s.io/release/v1.23.0/bin/darwin/amd64/kubectl\"\nAnd for macOS on Apple Silicon, type:\n    \ncurl -LO \"https://dl.k8s.io/release/v1.23.0/bin/darwin/arm64/kubectl\"",
                                                "language": "bash",
                                                "id": "1605f629-ac85-43c5-9822-c03ca68f6ce5-27"
                                              }
                                            ]
                                          },
                                          "title": "curl",
                                          "description": "To download the latest release:\n"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "title": "MacOS",
                                "description": "The following methods exist for installing kubectl on macOS:\n"
                              }
                            ]
                          }
                        ]
                      },
                      "source": "placeholder"
                    },
                    {
                      "group": "fakeit",
                      "title": "Choose a Kubernetes context",
                      "source": "placeholder",
                      "provenance": ["test/inputs/23/kubernetes/context.md"],
                      "choices": [
                        {
                          "member": 0,
                          "graph": {
                            "key": "32fee7c2-3648-450b-bb3e-6ad2ae3e51c9",
                            "sequence": [
                              {
                                "body": "kubectl config set-context \"\"",
                                "language": "shell",
                                "id": "1605f629-ac85-43c5-9822-c03ca68f6ce5-28"
                              }
                            ]
                          },
                          "title": "fakeit"
                        }
                      ]
                    }
                  ]
                },
                "source": "placeholder"
              },
              {
                "body": "helm -n ray install example-cluster --create-namespace https://github.com/ray-project/ray/tree/master/deploy/charts/ray/\nkubectl wait --for=condition=available --all rayclusters",
                "language": "shell",
                "id": "1605f629-ac85-43c5-9822-c03ca68f6ce5-29"
              }
            ]
          },
          "title": "Kubernetes Install",
          "description": "This will install Ray on a Kubernetes context of your choosing.\n"
        }
      ]
    },
    "step": {
      "name": "Install Ray",
      "description": "This step requires you to choose how to proceed",
      "content": [
        {
          "title": "Local Install",
          "group": "Local Install####Kubernetes Install",
          "member": 0,
          "isFirstChoice": true,
          "description": "\nThis will install Ray on your laptop."
        },
        {
          "title": "Kubernetes Install",
          "group": "Local Install####Kubernetes Install",
          "member": 1,
          "isFirstChoice": true,
          "description": "This will install Ray on a Kubernetes context of your choosing.\n"
        }
      ]
    }
  },
  {
    "graph": {
      "group": "Example: Using Ray Tasks to Parallelize a Function####Example: Using Ray Actors to Parallelize a Class####Example: Creating and Transforming Datasets",
      "title": "Run a Ray Job",
      "source": "placeholder",
      "choices": [
        {
          "member": 0,
          "graph": {
            "key": "7a0744e4-4d22-43ff-9b8b-7f85aed56d04",
            "sequence": [
              {
                "body": "import ray\nray.init()\n\n@ray.remote\ndef f(x):\n    return x * x\n\nfutures = [f.remote(i) for i in range(4)]\nprint(ray.get(futures)) # [0, 1, 4, 9]",
                "language": "python",
                "id": "1605f629-ac85-43c5-9822-c03ca68f6ce5-30"
              }
            ]
          },
          "title": "Example: Using Ray Tasks to Parallelize a Function",
          "description": "First, you import Ray and and initialize it with `ray.init()`. Then you decorate your function with `@ray.remote` to declare that you want to run this function remotely. Lastly, you call that function with `.remote()` instead of calling it normally. This remote call yields a future, a so-called Ray object reference, that you can then fetch with `ray.get`.\n"
        },
        {
          "member": 1,
          "graph": {
            "key": "0589882d-8045-482e-b391-0ded76a4c00b",
            "sequence": [
              {
                "body": "import ray\nray.init() # Only call this once.\n\n@ray.remote\nclass Counter(object):\n    def __init__(self):\n        self.n = 0\n\n    def increment(self):\n        self.n += 1\n\n    def read(self):\n        return self.n\n\ncounters = [Counter.remote() for i in range(4)]\n[c.increment.remote() for c in counters]\nfutures = [c.read.remote() for c in counters]\nprint(ray.get(futures)) # [1, 1, 1, 1]",
                "language": "python",
                "id": "1605f629-ac85-43c5-9822-c03ca68f6ce5-31"
              }
            ]
          },
          "title": "Example: Using Ray Actors to Parallelize a Class",
          "description": "Ray provides actors to allow you to parallelize an instance of a class in Python or Java. When you instantiate a class that is a Ray actor, Ray will start a remote instance of that class in the cluster. This actor can then execute remote method calls and maintain its own internal state.\n"
        },
        {
          "member": 2,
          "graph": {
            "key": "a2aa016e-9244-43cd-bb44-b87533a30638",
            "sequence": [
              {
                "key": "Creating and Transforming Datasets",
                "title": "Creating and Transforming Datasets",
                "filepath": "",
                "graph": {
                  "key": "71f14086-3adf-4685-ab61-a09ebe4fd2ae",
                  "sequence": [
                    {
                      "key": "Prerequisites",
                      "title": "Prerequisites",
                      "filepath": "",
                      "graph": {
                        "key": "60a1935a-7e8c-4a0f-a0f8-329c09f51502",
                        "sequence": [
                          {
                            "key": "test/inputs/23/data.md",
                            "title": "Install Ray Data",
                            "filepath": "test/inputs/23/data.md",
                            "graph": {
                              "key": "6322379c-3655-4506-abe7-8f61bcf0cbbd",
                              "sequence": [
                                {
                                  "body": "pip install \"ray[data]\" dask",
                                  "language": "shell",
                                  "id": "1605f629-ac85-43c5-9822-c03ca68f6ce5-32"
                                }
                              ]
                            },
                            "source": "placeholder"
                          }
                        ]
                      },
                      "source": "placeholder"
                    },
                    {
                      "key": "Creating and Transforming Datasets",
                      "title": "Main Tasks",
                      "filepath": "",
                      "graph": {
                        "key": "7c51b5d9-9675-4953-952b-62871e709a9b",
                        "sequence": [
                          {
                            "group": "New Dataset from Range####New Dataset from File",
                            "title": "Main Tasks",
                            "source": "placeholder",
                            "choices": [
                              {
                                "member": 0,
                                "graph": {
                                  "key": "1a6384be-04e1-4678-b768-62f8c9ea962e",
                                  "sequence": [
                                    {
                                      "body": "import ray\n\n# Create a Dataset of Python objects.\nds = ray.data.range(10000)\n# -> Dataset(num_blocks=200, num_rows=10000, schema=<class 'int'>)\n\nds.take(5)\n# -> [0, 1, 2, 3, 4]\n\nds.count()\n# -> 10000\n\n# Create a Dataset of Arrow records.\nds = ray.data.from_items([{\"col1\": i, \"col2\": str(i)} for i in range(10000)])\n# -> Dataset(num_blocks=200, num_rows=10000, schema={col1: int64, col2: string})\n\nds.show(5)\n# -> {'col1': 0, 'col2': '0'}\n# -> {'col1': 1, 'col2': '1'}\n# -> {'col1': 2, 'col2': '2'}\n# -> {'col1': 3, 'col2': '3'}\n# -> {'col1': 4, 'col2': '4'}\n\nds.schema()\n# -> col1: int64\n# -> col2: string",
                                      "language": "python",
                                      "id": "1605f629-ac85-43c5-9822-c03ca68f6ce5-33"
                                    }
                                  ]
                                },
                                "title": "New Dataset from Range",
                                "description": "\nGet started by creating Datasets from synthetic data using\n"
                              },
                              {
                                "member": 1,
                                "graph": {
                                  "key": "7a437dca-5a72-4948-9633-1d20dc0c7cdb",
                                  "sequence": [
                                    {
                                      "body": "import ray\nimport pandas as pd\nimport dask.dataframe as dd\n\n# Create a Dataset from a list of Pandas DataFrame objects.\npdf = pd.DataFrame({\"one\": [1, 2, 3], \"two\": [\"a\", \"b\", \"c\"]})\nds = ray.data.from_pandas([pdf])\n\n# Create a Dataset from a Dask-on-Ray DataFrame.\ndask_df = dd.from_pandas(pdf, npartitions=10)\nds = ray.data.from_dask(dask_df)\n\n# Transform the dataset using .map()\nds = ray.data.range(10000)\nds = ds.map(lambda x: x * 2)\n# -> Map Progress: 100%|████████████████████| 200/200 [00:00<00:00, 1123.54it/s]\n# -> Dataset(num_blocks=200, num_rows=10000, schema=<class 'int'>)\nds.take(5)\n# -> [0, 2, 4, 6, 8]\n\n# Transform the dataset using .filter()\nds.filter(lambda x: x > 5).take(5)\n# -> Map Progress: 100%|████████████████████| 200/200 [00:00<00:00, 1859.63it/s]\n# -> [6, 8, 10, 12, 14]\n\n# Transform the dataset using .flat_map()\nds.flat_map(lambda x: [x, -x]).take(5)\n# -> Map Progress: 100%|████████████████████| 200/200 [00:00<00:00, 1568.10it/s]\n# -> [0, 0, 2, -2, 4]",
                                      "language": "python",
                                      "id": "1605f629-ac85-43c5-9822-c03ca68f6ce5-34"
                                    }
                                  ]
                                },
                                "title": "New Dataset from File",
                                "description": "\nDatasets can be created from files on local disk or remote datasources\nsuch as S3. Any filesystem "
                              }
                            ]
                          }
                        ]
                      },
                      "source": "placeholder"
                    }
                  ]
                },
                "source": "placeholder"
              }
            ]
          },
          "title": "Example: Creating and Transforming Datasets",
          "description": "Ray Datasets are the standard way to load and exchange data in Ray libraries and applications. They provide basic distributed data transformations such as `map`, `filter`, and `repartition`, and are compatible with a variety of file formats, data sources, and distributed frameworks.\n"
        }
      ]
    },
    "step": {
      "name": "Run a Ray Job",
      "description": "This step requires you to choose how to proceed",
      "content": [
        {
          "title": "Example: Using Ray Tasks to Parallelize a Function",
          "group": "Example: Using Ray Tasks to Parallelize a Function####Example: Using Ray Actors to Parallelize a Class####Example: Creating and Transforming Datasets",
          "member": 0,
          "isFirstChoice": false,
          "description": "First, you import Ray and and initialize it with `ray.init()`. Then you decorate your function with `@ray.remote` to declare that you want to run this function remotely. Lastly, you call that function with `.remote()` instead of calling it normally. This remote call yields a future, a so-called Ray object reference, that you can then fetch with `ray.get`.\n"
        },
        {
          "title": "Example: Using Ray Actors to Parallelize a Class",
          "group": "Example: Using Ray Tasks to Parallelize a Function####Example: Using Ray Actors to Parallelize a Class####Example: Creating and Transforming Datasets",
          "member": 1,
          "isFirstChoice": false,
          "description": "Ray provides actors to allow you to parallelize an instance of a class in Python or Java. When you instantiate a class that is a Ray actor, Ray will start a remote instance of that class in the cluster. This actor can then execute remote method calls and maintain its own internal state.\n"
        },
        {
          "title": "Example: Creating and Transforming Datasets",
          "group": "Example: Using Ray Tasks to Parallelize a Function####Example: Using Ray Actors to Parallelize a Class####Example: Creating and Transforming Datasets",
          "member": 2,
          "isFirstChoice": false,
          "description": "Ray Datasets are the standard way to load and exchange data in Ray libraries and applications. They provide basic distributed data transformations such as `map`, `filter`, and `repartition`, and are compatible with a variety of file formats, data sources, and distributed frameworks.\n"
        }
      ]
    }
  }
]

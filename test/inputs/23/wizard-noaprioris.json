[
  {
    "graph": {
      "group": "Local Install####Kubernetes Install",
      "title": "Install Ray",
      "source": "placeholder",
      "provenance": ["test/inputs/23/install/index.md"],
      "choices": [
        {
          "member": 0,
          "graph": {
            "key": "dc64f192-985f-4561-8aaa-4b26d5935310",
            "sequence": [
              {
                "group": "Intel####Apple Silicon",
                "title": "Local Install",
                "source": "placeholder",
                "provenance": ["test/inputs/23/install/index.md"],
                "choices": [
                  {
                    "member": 0,
                    "graph": {
                      "key": "68879842-df68-4c95-a824-a8709fa682a5",
                      "sequence": [
                        {
                          "body": "pip install -U ray",
                          "language": "shell",
                          "id": "aa418ecc-6051-4523-835a-d478cdebcf56-0"
                        }
                      ]
                    },
                    "title": "Intel",
                    "description": "\nIf you are running on x86/Intel hardware."
                  },
                  {
                    "member": 1,
                    "graph": {
                      "key": "7f39ee6f-476a-4c29-a923-c41b9995c414",
                      "sequence": [
                        {
                          "key": "test/inputs/23/python/conda/install.md",
                          "title": "Conda: Installation",
                          "filepath": "test/inputs/23/python/conda/install.md",
                          "graph": {
                            "key": "6a4e6a68-3c2b-4510-bc62-8abd0616d5de",
                            "sequence": [
                              {
                                "group": "Install Miniconda####Install Anaconda",
                                "title": "Choose a Conda Installation Method",
                                "source": "placeholder",
                                "provenance": ["test/inputs/23/python/conda/install.md"],
                                "choices": [
                                  {
                                    "member": 0,
                                    "graph": {
                                      "key": "ecde3aa8-eecd-4a07-a513-a51e30985c04",
                                      "sequence": [
                                        {
                                          "group": "Windows####Linux####MacOS",
                                          "title": "Install Miniconda",
                                          "source": "placeholder",
                                          "provenance": ["test/inputs/23/python/conda/install.md"],
                                          "choices": [
                                            {
                                              "member": 1,
                                              "graph": {
                                                "key": "31881e59-b2e9-459d-8223-452f6ef0207c",
                                                "sequence": [
                                                  {
                                                    "group": "Intel####ARM64",
                                                    "title": "Linux",
                                                    "source": "placeholder",
                                                    "provenance": ["test/inputs/23/python/conda/install.md"],
                                                    "choices": [
                                                      {
                                                        "member": 0,
                                                        "graph": {
                                                          "key": "290b4e19-c683-4142-8f94-75167ad150b9",
                                                          "sequence": [
                                                            {
                                                              "body": "curl -LO https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh\nbash Miniconda3-latest-Linux-x86_64.sh -b -p ~/miniconda",
                                                              "language": "shell",
                                                              "id": "aa418ecc-6051-4523-835a-d478cdebcf56-1"
                                                            }
                                                          ]
                                                        },
                                                        "title": "Intel"
                                                      },
                                                      {
                                                        "member": 1,
                                                        "graph": {
                                                          "key": "30062ad7-ae4e-47a2-b7cc-b36beb8f8416",
                                                          "sequence": [
                                                            {
                                                              "body": "curl -LO https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-aarch64.sh\nbash Miniconda3-latest-Linux-aarch64.sh -b -p $HOME/miniconda",
                                                              "language": "shell",
                                                              "id": "aa418ecc-6051-4523-835a-d478cdebcf56-2"
                                                            }
                                                          ]
                                                        },
                                                        "title": "ARM64"
                                                      }
                                                    ]
                                                  }
                                                ]
                                              },
                                              "title": "Linux",
                                              "description": "\nIf you are running a Linux OS."
                                            },
                                            {
                                              "member": 2,
                                              "graph": {
                                                "key": "1b3b0e84-e4ab-437f-930a-20c239ede967",
                                                "sequence": [
                                                  {
                                                    "group": "Intel####Apple Silicon",
                                                    "title": "MacOS",
                                                    "source": "placeholder",
                                                    "provenance": ["test/inputs/23/python/conda/install.md"],
                                                    "choices": [
                                                      {
                                                        "member": 0,
                                                        "graph": {
                                                          "key": "bec11732-a1d3-4976-b5c6-4193fef5daca",
                                                          "sequence": [
                                                            {
                                                              "body": "curl -LO https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh\nbash Miniconda3-latest-MacOSX-x86_64.sh -b -p $HOME/miniconda",
                                                              "language": "shell",
                                                              "id": "aa418ecc-6051-4523-835a-d478cdebcf56-3"
                                                            }
                                                          ]
                                                        },
                                                        "title": "Intel",
                                                        "description": "\nIf you are running on x86/Intel hardware."
                                                      },
                                                      {
                                                        "member": 1,
                                                        "graph": {
                                                          "key": "9a48daa9-a04d-4a06-8dc6-3feb58225f22",
                                                          "sequence": [
                                                            {
                                                              "body": "curl -LO https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-arm64.sh\nbash Miniconda3-latest-MacOSX-arm64.sh -b -p $HOME/miniconda",
                                                              "language": "shell",
                                                              "id": "aa418ecc-6051-4523-835a-d478cdebcf56-4"
                                                            }
                                                          ]
                                                        },
                                                        "title": "Apple Silicon",
                                                        "description": "\nIf you are running on Apple Silicon/ARM hardware."
                                                      }
                                                    ]
                                                  }
                                                ]
                                              },
                                              "title": "MacOS",
                                              "description": "\nIf you are running MacOS."
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "title": "Install Miniconda",
                                    "description": "\nMiniconda is a free minimal installer for conda. It is a small, bootstrap version of Anaconda that includes only conda, Python, the packages they depend on, and a small number of other useful packages, including pip, zlib and a few others. "
                                  },
                                  {
                                    "member": 1,
                                    "graph": {
                                      "key": "fcbb97ec-6e23-4353-80b5-76fd45d5f71f",
                                      "sequence": [
                                        {
                                          "group": "MacOS####Linux",
                                          "title": "Install Anaconda",
                                          "source": "placeholder",
                                          "provenance": ["test/inputs/23/python/conda/install.md"],
                                          "choices": [
                                            {
                                              "member": 0,
                                              "graph": {
                                                "key": "0daf9806-fdaa-45e0-b9d6-41fe41f2341d",
                                                "sequence": [
                                                  {
                                                    "body": "curl -LO https://repo.anaconda.com/archive/Anaconda3-2021.11-MacOSX-x86_64.sh\nbash Anaconda3-2021.11-MacOSX-x86_64.sh -b -p $HOME/miniconda",
                                                    "language": "shell",
                                                    "id": "aa418ecc-6051-4523-835a-d478cdebcf56-5"
                                                  }
                                                ]
                                              },
                                              "title": "MacOS"
                                            },
                                            {
                                              "member": 1,
                                              "graph": {
                                                "key": "635df8d7-0844-4d01-b45f-46af7db9a0fd",
                                                "sequence": [
                                                  {
                                                    "group": "x86####POWER8 and POWER9####AWS Graviton2/ARM64####IBM z/Linux and LinuxONE",
                                                    "title": "Linux",
                                                    "source": "placeholder",
                                                    "provenance": ["test/inputs/23/python/conda/install.md"],
                                                    "choices": [
                                                      {
                                                        "member": 0,
                                                        "graph": {
                                                          "key": "5ade077b-898d-4c89-b6e7-da93c22e00b4",
                                                          "sequence": [
                                                            {
                                                              "body": "curl -LO https://repo.anaconda.com/archive/Anaconda3-2021.11-Linux-x86_64.sh\nbash Anaconda3-2021.11-Linux-x86_64.sh -b -p $HOME/miniconda",
                                                              "language": "shell",
                                                              "id": "aa418ecc-6051-4523-835a-d478cdebcf56-6"
                                                            }
                                                          ]
                                                        },
                                                        "title": "x86"
                                                      },
                                                      {
                                                        "member": 1,
                                                        "graph": {
                                                          "key": "71f19af5-8e0f-499e-ba9b-498d0a9f2325",
                                                          "sequence": [
                                                            {
                                                              "body": "curl -LO https://repo.anaconda.com/archive/Anaconda3-2021.11-Linux-ppc64le.sh\nbash Anaconda3-2021.11-Linux-ppc64le.sh -b -p $HOME/miniconda",
                                                              "language": "shell",
                                                              "id": "aa418ecc-6051-4523-835a-d478cdebcf56-7"
                                                            }
                                                          ]
                                                        },
                                                        "title": "POWER8 and POWER9"
                                                      },
                                                      {
                                                        "member": 2,
                                                        "graph": {
                                                          "key": "0e8b88e4-8486-4957-9df5-66b47b813915",
                                                          "sequence": [
                                                            {
                                                              "body": "curl -LO https://repo.anaconda.com/archive/Anaconda3-2021.11-Linux-aarch64.sh\nbash Anaconda3-2021.11-Linux-aarch64.sh -b -p $HOME/miniconda",
                                                              "language": "shell",
                                                              "id": "aa418ecc-6051-4523-835a-d478cdebcf56-8"
                                                            }
                                                          ]
                                                        },
                                                        "title": "AWS Graviton2/ARM64"
                                                      },
                                                      {
                                                        "member": 3,
                                                        "graph": {
                                                          "key": "3c5b05d6-7e7e-4bed-8fbe-a66639697904",
                                                          "sequence": [
                                                            {
                                                              "body": "curl -LO https://repo.anaconda.com/archive/Anaconda3-2021.11-Linux-s390x.sh\nbash Anaconda3-2021.11-Linux-s390x.sh -b -p $HOME/miniconda",
                                                              "language": "shell",
                                                              "id": "aa418ecc-6051-4523-835a-d478cdebcf56-9"
                                                            }
                                                          ]
                                                        },
                                                        "title": "IBM z/Linux and LinuxONE"
                                                      }
                                                    ]
                                                  }
                                                ]
                                              },
                                              "title": "Linux"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "title": "Install Anaconda",
                                    "description": "\nThis will install Miniconda plus hundreds of packages."
                                  }
                                ]
                              },
                              {
                                "body": "export PATH=~/miniconda/bin:$PATH",
                                "language": "shell",
                                "id": "aa418ecc-6051-4523-835a-d478cdebcf56-10"
                              }
                            ]
                          },
                          "source": "placeholder"
                        },
                        {
                          "body": "conda activate\npip uninstall grpcio\nconda install grpcio\npip install ray",
                          "language": "shell",
                          "id": "aa418ecc-6051-4523-835a-d478cdebcf56-11"
                        }
                      ]
                    },
                    "title": "Apple Silicon",
                    "description": "\nIf you are running on Apple Silicon/ARM hardware."
                  }
                ]
              }
            ]
          },
          "title": "Local Install",
          "description": "\nThis will install Ray on your laptop."
        },
        {
          "member": 1,
          "graph": {
            "key": "750d90cb-0d62-4465-928d-c486449bd012",
            "sequence": [
              {
                "key": "test/inputs/23/kubernetes/kubectl.md",
                "title": "Install kubectl",
                "filepath": "test/inputs/23/kubernetes/kubectl.md",
                "graph": {
                  "key": "bdae31fb-32a2-42a0-9e61-9e533f86aced",
                  "sequence": [
                    {
                      "group": "Linux####Windows####MacOS",
                      "title": "Install kubectl",
                      "source": "placeholder",
                      "provenance": ["test/inputs/23/kubernetes/kubectl.md"],
                      "choices": [
                        {
                          "member": 0,
                          "graph": {
                            "key": "59cfb04f-d35f-426c-8969-b7faf672c973",
                            "sequence": [
                              {
                                "body": "curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"",
                                "language": "bash",
                                "id": "aa418ecc-6051-4523-835a-d478cdebcf56-12"
                              }
                            ]
                          },
                          "title": "Linux",
                          "description": "Download the latest release with the command:\n"
                        },
                        {
                          "member": 1,
                          "graph": {
                            "key": "86386cfc-6625-4cdc-9aea-72b5cefb044f",
                            "sequence": [
                              {
                                "body": "curl -LO \"https://dl.k8s.io/release/v1.23.0/bin/windows/amd64/kubectl.exe\"",
                                "language": "bash",
                                "id": "aa418ecc-6051-4523-835a-d478cdebcf56-13"
                              }
                            ]
                          },
                          "title": "Windows",
                          "description": "Download the latest release:\n"
                        },
                        {
                          "member": 2,
                          "graph": {
                            "key": "1fae9f55-c6aa-4792-9495-5ee02b38a9d4",
                            "sequence": [
                              {
                                "group": "Homebrew####curl",
                                "title": "MacOS",
                                "source": "placeholder",
                                "provenance": ["test/inputs/23/kubernetes/kubectl.md"],
                                "choices": [
                                  {
                                    "member": 0,
                                    "graph": {
                                      "key": "59f799a5-a569-48df-9ae2-90e3b11abb81",
                                      "sequence": [
                                        {
                                          "body": "brew install kubectl",
                                          "language": "bash",
                                          "id": "aa418ecc-6051-4523-835a-d478cdebcf56-14"
                                        }
                                      ]
                                    },
                                    "title": "Homebrew",
                                    "description": "\nIf you are on macOS and using Homebrew package manager, you can install kubectl with Homebrew."
                                  },
                                  {
                                    "member": 1,
                                    "graph": {
                                      "key": "dcf45ac6-e2c3-43d6-aa43-955029b9b2b6",
                                      "sequence": [
                                        {
                                          "group": "Intel####Apple Silicon",
                                          "title": "curl",
                                          "source": "placeholder",
                                          "provenance": ["test/inputs/23/kubernetes/kubectl.md"],
                                          "choices": [
                                            {
                                              "member": 0,
                                              "graph": {
                                                "key": "e7f2ff3f-abc5-4264-8862-9b8fa209e358",
                                                "sequence": [
                                                  {
                                                    "body": "curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/darwin/amd64/kubectl.sha256\"",
                                                    "language": "bash",
                                                    "id": "aa418ecc-6051-4523-835a-d478cdebcf56-15"
                                                  }
                                                ]
                                              },
                                              "title": "Intel"
                                            },
                                            {
                                              "member": 1,
                                              "graph": {
                                                "key": "54c49da9-8b78-4e74-aae6-087f13a4b998",
                                                "sequence": [
                                                  {
                                                    "body": "curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/darwin/arm64/kubectl.sha256\"",
                                                    "language": "bash",
                                                    "id": "aa418ecc-6051-4523-835a-d478cdebcf56-16"
                                                  }
                                                ]
                                              },
                                              "title": "Apple Silicon"
                                            }
                                          ]
                                        },
                                        {
                                          "body": "curl -LO \"https://dl.k8s.io/release/v1.23.0/bin/darwin/amd64/kubectl\"\nAnd for macOS on Apple Silicon, type:\n    \ncurl -LO \"https://dl.k8s.io/release/v1.23.0/bin/darwin/arm64/kubectl\"",
                                          "language": "bash",
                                          "id": "aa418ecc-6051-4523-835a-d478cdebcf56-17"
                                        }
                                      ]
                                    },
                                    "title": "curl",
                                    "description": "To download the latest release:\n"
                                  }
                                ]
                              }
                            ]
                          },
                          "title": "MacOS",
                          "description": "The following methods exist for installing kubectl on macOS:\n"
                        }
                      ]
                    }
                  ]
                },
                "source": "placeholder"
              },
              {
                "key": "test/inputs/23/kubernetes/helm3.md",
                "title": "Install Helm v3",
                "filepath": "test/inputs/23/kubernetes/helm3.md",
                "graph": {
                  "key": "7a3af3c1-6736-4ad3-9e4f-99dc4209d9f1",
                  "sequence": [
                    {
                      "group": "MacOS####Linux####Windows",
                      "title": "Install Helm v3",
                      "source": "placeholder",
                      "provenance": ["test/inputs/23/kubernetes/helm3.md"],
                      "choices": [
                        {
                          "member": 0,
                          "graph": {
                            "key": "768eb89e-43e9-4b2a-abe5-55786c0f9914",
                            "sequence": [
                              {
                                "group": "Homebrew####curl",
                                "title": "MacOS",
                                "source": "placeholder",
                                "provenance": ["test/inputs/23/kubernetes/helm3.md"],
                                "choices": [
                                  {
                                    "member": 0,
                                    "graph": {
                                      "key": "11e4f12e-f060-47ed-ae19-abb4817fea4d",
                                      "sequence": [
                                        {
                                          "body": "brew install helm",
                                          "language": "shell",
                                          "id": "aa418ecc-6051-4523-835a-d478cdebcf56-18"
                                        }
                                      ]
                                    },
                                    "title": "Homebrew"
                                  },
                                  {
                                    "member": 1,
                                    "graph": {
                                      "key": "0bf65bef-6a2c-4652-95bc-2dbe777cdfd7",
                                      "sequence": [
                                        {
                                          "body": "bash $<(curl -L https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3)",
                                          "language": "shell",
                                          "id": "aa418ecc-6051-4523-835a-d478cdebcf56-19"
                                        }
                                      ]
                                    },
                                    "title": "curl"
                                  }
                                ]
                              }
                            ]
                          },
                          "title": "MacOS"
                        },
                        {
                          "member": 1,
                          "graph": {
                            "key": "d8bf2fb6-22f0-4076-9273-24bc817569f5",
                            "sequence": [
                              {
                                "body": "bash $<(curl -L https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3)",
                                "language": "shell",
                                "id": "aa418ecc-6051-4523-835a-d478cdebcf56-20"
                              }
                            ]
                          },
                          "title": "Linux"
                        },
                        {
                          "member": 2,
                          "graph": {
                            "key": "48a2603d-a5b5-4772-9699-cbaf1354456b",
                            "sequence": [
                              {
                                "body": "bash $<(curl -L https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3)",
                                "language": "shell",
                                "id": "aa418ecc-6051-4523-835a-d478cdebcf56-21"
                              }
                            ]
                          },
                          "title": "Windows"
                        }
                      ]
                    }
                  ]
                },
                "source": "placeholder"
              },
              {
                "key": "test/inputs/23/kubernetes/context.md",
                "title": "Choose a Kubernetes context",
                "filepath": "test/inputs/23/kubernetes/context.md",
                "graph": {
                  "key": "986b3b0d-486a-4a2b-9426-43098a26de03",
                  "sequence": [
                    {
                      "key": "test/inputs/23/kubernetes/kubectl.md",
                      "title": "Install kubectl",
                      "filepath": "test/inputs/23/kubernetes/kubectl.md",
                      "graph": {
                        "key": "68181fdc-e1f8-4917-a296-34232e06fe78",
                        "sequence": [
                          {
                            "group": "Linux####Windows####MacOS",
                            "title": "Install kubectl",
                            "source": "placeholder",
                            "provenance": ["test/inputs/23/kubernetes/kubectl.md"],
                            "choices": [
                              {
                                "member": 0,
                                "graph": {
                                  "key": "b79b516f-a683-47a5-ae4f-d49edd136e1b",
                                  "sequence": [
                                    {
                                      "body": "curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"",
                                      "language": "bash",
                                      "id": "aa418ecc-6051-4523-835a-d478cdebcf56-22"
                                    }
                                  ]
                                },
                                "title": "Linux",
                                "description": "Download the latest release with the command:\n"
                              },
                              {
                                "member": 1,
                                "graph": {
                                  "key": "8e66ca0a-b47b-4dca-a0f4-acd9dfbe6fbe",
                                  "sequence": [
                                    {
                                      "body": "curl -LO \"https://dl.k8s.io/release/v1.23.0/bin/windows/amd64/kubectl.exe\"",
                                      "language": "bash",
                                      "id": "aa418ecc-6051-4523-835a-d478cdebcf56-23"
                                    }
                                  ]
                                },
                                "title": "Windows",
                                "description": "Download the latest release:\n"
                              },
                              {
                                "member": 2,
                                "graph": {
                                  "key": "260b8f20-ea60-44b1-bf16-6ad055e680d7",
                                  "sequence": [
                                    {
                                      "group": "Homebrew####curl",
                                      "title": "MacOS",
                                      "source": "placeholder",
                                      "provenance": ["test/inputs/23/kubernetes/kubectl.md"],
                                      "choices": [
                                        {
                                          "member": 0,
                                          "graph": {
                                            "key": "8cd94334-94fd-4754-8a38-835cc81e0f03",
                                            "sequence": [
                                              {
                                                "body": "brew install kubectl",
                                                "language": "bash",
                                                "id": "aa418ecc-6051-4523-835a-d478cdebcf56-24"
                                              }
                                            ]
                                          },
                                          "title": "Homebrew",
                                          "description": "\nIf you are on macOS and using Homebrew package manager, you can install kubectl with Homebrew."
                                        },
                                        {
                                          "member": 1,
                                          "graph": {
                                            "key": "930e73c7-615f-4b75-a117-b78f3a6ca3f6",
                                            "sequence": [
                                              {
                                                "group": "Intel####Apple Silicon",
                                                "title": "curl",
                                                "source": "placeholder",
                                                "provenance": ["test/inputs/23/kubernetes/kubectl.md"],
                                                "choices": [
                                                  {
                                                    "member": 0,
                                                    "graph": {
                                                      "key": "fb8c1d35-c1b1-4378-a3df-133adbad47fb",
                                                      "sequence": [
                                                        {
                                                          "body": "curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/darwin/amd64/kubectl.sha256\"",
                                                          "language": "bash",
                                                          "id": "aa418ecc-6051-4523-835a-d478cdebcf56-25"
                                                        }
                                                      ]
                                                    },
                                                    "title": "Intel"
                                                  },
                                                  {
                                                    "member": 1,
                                                    "graph": {
                                                      "key": "bde8fb36-9e15-4db1-bb5d-8fcf24add0a9",
                                                      "sequence": [
                                                        {
                                                          "body": "curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/darwin/arm64/kubectl.sha256\"",
                                                          "language": "bash",
                                                          "id": "aa418ecc-6051-4523-835a-d478cdebcf56-26"
                                                        }
                                                      ]
                                                    },
                                                    "title": "Apple Silicon"
                                                  }
                                                ]
                                              },
                                              {
                                                "body": "curl -LO \"https://dl.k8s.io/release/v1.23.0/bin/darwin/amd64/kubectl\"\nAnd for macOS on Apple Silicon, type:\n    \ncurl -LO \"https://dl.k8s.io/release/v1.23.0/bin/darwin/arm64/kubectl\"",
                                                "language": "bash",
                                                "id": "aa418ecc-6051-4523-835a-d478cdebcf56-27"
                                              }
                                            ]
                                          },
                                          "title": "curl",
                                          "description": "To download the latest release:\n"
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "title": "MacOS",
                                "description": "The following methods exist for installing kubectl on macOS:\n"
                              }
                            ]
                          }
                        ]
                      },
                      "source": "placeholder"
                    },
                    {
                      "group": "fakeit",
                      "title": "Choose a Kubernetes context",
                      "source": "placeholder",
                      "provenance": ["test/inputs/23/kubernetes/context.md"],
                      "choices": [
                        {
                          "member": 0,
                          "graph": {
                            "key": "84b5e398-178e-4be3-b65f-156f2e580887",
                            "sequence": [
                              {
                                "body": "kubectl config set-context \"\"",
                                "language": "shell",
                                "id": "aa418ecc-6051-4523-835a-d478cdebcf56-28"
                              }
                            ]
                          },
                          "title": "fakeit"
                        }
                      ]
                    }
                  ]
                },
                "source": "placeholder"
              },
              {
                "body": "helm -n ray install example-cluster --create-namespace https://github.com/ray-project/ray/tree/master/deploy/charts/ray/\nkubectl wait --for=condition=available --all rayclusters",
                "language": "shell",
                "id": "aa418ecc-6051-4523-835a-d478cdebcf56-29"
              }
            ]
          },
          "title": "Kubernetes Install",
          "description": "This will install Ray on a Kubernetes context of your choosing.\n"
        }
      ]
    },
    "step": {
      "name": "Install Ray",
      "description": "This step requires you to choose how to proceed",
      "content": [
        {
          "title": "Local Install",
          "group": "Local Install####Kubernetes Install",
          "member": 0,
          "isFirstChoice": true,
          "description": "\nThis will install Ray on your laptop."
        },
        {
          "title": "Kubernetes Install",
          "group": "Local Install####Kubernetes Install",
          "member": 1,
          "isFirstChoice": true,
          "description": "This will install Ray on a Kubernetes context of your choosing.\n"
        }
      ]
    }
  },
  {
    "graph": {
      "group": "Example: Using Ray Tasks to Parallelize a Function####Example: Using Ray Actors to Parallelize a Class####Example: Creating and Transforming Datasets",
      "title": "Run a Ray Job",
      "source": "placeholder",
      "provenance": ["test/inputs/23/in.md"],
      "choices": [
        {
          "member": 0,
          "graph": {
            "key": "771088d0-9c4b-4fb6-82c4-94f8376c31ec",
            "sequence": [
              {
                "body": "import ray\nray.init()\n\n@ray.remote\ndef f(x):\n    return x * x\n\nfutures = [f.remote(i) for i in range(4)]\nprint(ray.get(futures)) # [0, 1, 4, 9]",
                "language": "python",
                "id": "aa418ecc-6051-4523-835a-d478cdebcf56-30"
              }
            ]
          },
          "title": "Example: Using Ray Tasks to Parallelize a Function",
          "description": "First, you import Ray and and initialize it with `ray.init()`. Then you decorate your function with `@ray.remote` to declare that you want to run this function remotely. Lastly, you call that function with `.remote()` instead of calling it normally. This remote call yields a future, a so-called Ray object reference, that you can then fetch with `ray.get`.\n"
        },
        {
          "member": 1,
          "graph": {
            "key": "cbf4edea-1f98-4691-b32a-79b2b303478b",
            "sequence": [
              {
                "body": "import ray\nray.init() # Only call this once.\n\n@ray.remote\nclass Counter(object):\n    def __init__(self):\n        self.n = 0\n\n    def increment(self):\n        self.n += 1\n\n    def read(self):\n        return self.n\n\ncounters = [Counter.remote() for i in range(4)]\n[c.increment.remote() for c in counters]\nfutures = [c.read.remote() for c in counters]\nprint(ray.get(futures)) # [1, 1, 1, 1]",
                "language": "python",
                "id": "aa418ecc-6051-4523-835a-d478cdebcf56-31"
              }
            ]
          },
          "title": "Example: Using Ray Actors to Parallelize a Class",
          "description": "Ray provides actors to allow you to parallelize an instance of a class in Python or Java. When you instantiate a class that is a Ray actor, Ray will start a remote instance of that class in the cluster. This actor can then execute remote method calls and maintain its own internal state.\n"
        },
        {
          "member": 2,
          "graph": {
            "key": "6eedcb4d-a12c-4f35-a166-0f6a6a487d50",
            "sequence": [
              {
                "key": "Creating and Transforming Datasets",
                "title": "Creating and Transforming Datasets",
                "filepath": "",
                "graph": {
                  "key": "62714773-54c8-43b3-8151-bcd3cb138a6c",
                  "sequence": [
                    {
                      "key": "Prerequisites",
                      "title": "Prerequisites",
                      "filepath": "",
                      "graph": {
                        "key": "93fe0c4e-2d70-4b2d-ae9c-1ff2532e8e9b",
                        "sequence": [
                          {
                            "key": "test/inputs/23/data.md",
                            "title": "Install Ray Data",
                            "filepath": "test/inputs/23/data.md",
                            "graph": {
                              "key": "000b8160-4ad5-4b25-a6b2-08951221af57",
                              "sequence": [
                                {
                                  "body": "pip install \"ray[data]\" dask",
                                  "language": "shell",
                                  "id": "aa418ecc-6051-4523-835a-d478cdebcf56-32"
                                }
                              ]
                            },
                            "source": "placeholder"
                          }
                        ]
                      },
                      "source": "placeholder"
                    },
                    {
                      "key": "Creating and Transforming Datasets",
                      "title": "Main Tasks",
                      "filepath": "",
                      "graph": {
                        "key": "c1a4491a-689d-49e1-ada1-ef1ad2d7c2dd",
                        "sequence": [
                          {
                            "group": "New Dataset from Range####New Dataset from File",
                            "title": "Main Tasks",
                            "source": "placeholder",
                            "provenance": ["test/inputs/23/in.md"],
                            "choices": [
                              {
                                "member": 0,
                                "graph": {
                                  "key": "52785816-07b3-4c9c-a412-b31ac75e1e34",
                                  "sequence": [
                                    {
                                      "body": "import ray\n\n# Create a Dataset of Python objects.\nds = ray.data.range(10000)\n# -> Dataset(num_blocks=200, num_rows=10000, schema=<class 'int'>)\n\nds.take(5)\n# -> [0, 1, 2, 3, 4]\n\nds.count()\n# -> 10000\n\n# Create a Dataset of Arrow records.\nds = ray.data.from_items([{\"col1\": i, \"col2\": str(i)} for i in range(10000)])\n# -> Dataset(num_blocks=200, num_rows=10000, schema={col1: int64, col2: string})\n\nds.show(5)\n# -> {'col1': 0, 'col2': '0'}\n# -> {'col1': 1, 'col2': '1'}\n# -> {'col1': 2, 'col2': '2'}\n# -> {'col1': 3, 'col2': '3'}\n# -> {'col1': 4, 'col2': '4'}\n\nds.schema()\n# -> col1: int64\n# -> col2: string",
                                      "language": "python",
                                      "id": "aa418ecc-6051-4523-835a-d478cdebcf56-33"
                                    }
                                  ]
                                },
                                "title": "New Dataset from Range",
                                "description": "\nGet started by creating Datasets from synthetic data using\n"
                              },
                              {
                                "member": 1,
                                "graph": {
                                  "key": "27de5ae3-a62c-4290-a85f-08c35c8fdbd5",
                                  "sequence": [
                                    {
                                      "body": "import ray\nimport pandas as pd\nimport dask.dataframe as dd\n\n# Create a Dataset from a list of Pandas DataFrame objects.\npdf = pd.DataFrame({\"one\": [1, 2, 3], \"two\": [\"a\", \"b\", \"c\"]})\nds = ray.data.from_pandas([pdf])\n\n# Create a Dataset from a Dask-on-Ray DataFrame.\ndask_df = dd.from_pandas(pdf, npartitions=10)\nds = ray.data.from_dask(dask_df)\n\n# Transform the dataset using .map()\nds = ray.data.range(10000)\nds = ds.map(lambda x: x * 2)\n# -> Map Progress: 100%|████████████████████| 200/200 [00:00<00:00, 1123.54it/s]\n# -> Dataset(num_blocks=200, num_rows=10000, schema=<class 'int'>)\nds.take(5)\n# -> [0, 2, 4, 6, 8]\n\n# Transform the dataset using .filter()\nds.filter(lambda x: x > 5).take(5)\n# -> Map Progress: 100%|████████████████████| 200/200 [00:00<00:00, 1859.63it/s]\n# -> [6, 8, 10, 12, 14]\n\n# Transform the dataset using .flat_map()\nds.flat_map(lambda x: [x, -x]).take(5)\n# -> Map Progress: 100%|████████████████████| 200/200 [00:00<00:00, 1568.10it/s]\n# -> [0, 0, 2, -2, 4]",
                                      "language": "python",
                                      "id": "aa418ecc-6051-4523-835a-d478cdebcf56-34"
                                    }
                                  ]
                                },
                                "title": "New Dataset from File",
                                "description": "\nDatasets can be created from files on local disk or remote datasources\nsuch as S3. Any filesystem "
                              }
                            ]
                          }
                        ]
                      },
                      "source": "placeholder"
                    }
                  ]
                },
                "source": "placeholder"
              }
            ]
          },
          "title": "Example: Creating and Transforming Datasets",
          "description": "Ray Datasets are the standard way to load and exchange data in Ray libraries and applications. They provide basic distributed data transformations such as `map`, `filter`, and `repartition`, and are compatible with a variety of file formats, data sources, and distributed frameworks.\n"
        }
      ]
    },
    "step": {
      "name": "Run a Ray Job",
      "description": "This step requires you to choose how to proceed",
      "content": [
        {
          "title": "Example: Using Ray Tasks to Parallelize a Function",
          "group": "Example: Using Ray Tasks to Parallelize a Function####Example: Using Ray Actors to Parallelize a Class####Example: Creating and Transforming Datasets",
          "member": 0,
          "isFirstChoice": false,
          "description": "First, you import Ray and and initialize it with `ray.init()`. Then you decorate your function with `@ray.remote` to declare that you want to run this function remotely. Lastly, you call that function with `.remote()` instead of calling it normally. This remote call yields a future, a so-called Ray object reference, that you can then fetch with `ray.get`.\n"
        },
        {
          "title": "Example: Using Ray Actors to Parallelize a Class",
          "group": "Example: Using Ray Tasks to Parallelize a Function####Example: Using Ray Actors to Parallelize a Class####Example: Creating and Transforming Datasets",
          "member": 1,
          "isFirstChoice": false,
          "description": "Ray provides actors to allow you to parallelize an instance of a class in Python or Java. When you instantiate a class that is a Ray actor, Ray will start a remote instance of that class in the cluster. This actor can then execute remote method calls and maintain its own internal state.\n"
        },
        {
          "title": "Example: Creating and Transforming Datasets",
          "group": "Example: Using Ray Tasks to Parallelize a Function####Example: Using Ray Actors to Parallelize a Class####Example: Creating and Transforming Datasets",
          "member": 2,
          "isFirstChoice": false,
          "description": "Ray Datasets are the standard way to load and exchange data in Ray libraries and applications. They provide basic distributed data transformations such as `map`, `filter`, and `repartition`, and are compatible with a variety of file formats, data sources, and distributed frameworks.\n"
        }
      ]
    }
  }
]
